<?xml version="1.0" encoding="utf-8"?>
<Report ScriptLanguage="CSharp" ReportInfo.Created="12/24/2019 10:00:00" ConvertNulls="false" ReportInfo.Modified="08/27/2020 10:58:43" ReportInfo.CreatorVersion="2017.4.7.0">
  <ScriptText>
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Windows.Forms;
    using System.Drawing;
    using System.Data;
    using FastReport;
    using FastReport.Data;
    using FastReport.Dialog;
    using FastReport.Barcode;
    using FastReport.Table;
    using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {

    private void MatrixData_AfterData(object sender, EventArgs e)
    {
      // remove the AfterData method from the ResultTable object, if it had been assigned earlier
      MatrixData.ResultTable.AfterData -= MatrixDataResultTable_AfterData;
      // assign the AfterData method for the ResultTable object
      MatrixData.ResultTable.AfterData += MatrixDataResultTable_AfterData;
    }
    
    private void MatrixDataResultTable_AfterData(object sender, EventArgs e)
    {
      TableResult table = sender as TableResult;
      
      //fix table's column headers
      table[0, 0].RowSpan = 2;
      table[0, 0].ColSpan = 1;
      
      //fix table's column headers
      table[1, 0].RowSpan = 2;
      table[1, 0].ColSpan = 1;
      table[1, 0].SetStyle(table[0, 0]);
      table[1, 0].Text = &quot;Значение&quot;;

      for (int i = 2; i &lt; table.ColumnCount; i++)
      {
        if(!String.IsNullOrEmpty(table[i, 1].Text))  {
          DataSourceBase groupDictionary = Report.GetDataSource(&quot;GroupDictionary&quot;);
          groupDictionary.Init();
          while (groupDictionary.HasMoreRows)
          { 
            string textName = Report.GetColumnValue(&quot;GroupDictionary.GroupId&quot;).ToString();
            if(textName == table[i, 1].Text) {
              
              table[i, 1].Text = Report.GetColumnValue(&quot;GroupDictionary.GroupName&quot;).ToString();
              break;
            }
            groupDictionary.Next();
          }  
        }    
      }

      //adding new column for Data.ObjectsCount data
      TableColumn newColumn = new TableColumn();
      newColumn.Width = 202.74f;
      table.Columns.Insert(0, newColumn);
      newColumn = new TableColumn();
      newColumn.Width = 202.74f;
      table.Columns.Insert(2, newColumn);
      
      //filling data for new colunm
      for (int i = 0; i &lt; table.RowCount; i++)
      {
        table[0, i].SetStyle(table[1,i]);
        table[2, i].SetStyle(table[1,i]);
        if(i == 0){
          table[0, i].Text = &quot;Номер кадастрового района&quot;;
          table[0, i].RowSpan = 2; 
          table[2, i].Text = &quot;Количество объектов недвижимости&quot;;
          table[2, i].RowSpan = 2; 
        } else if(table[1, i].RowSpan &gt; 1) {
          int rowspan = table[1, i].RowSpan;
          table[0, i].RowSpan = rowspan;
          table[2, i].RowSpan = rowspan;
          DataSourceBase data = Report.GetDataSource(&quot;Data&quot;);
          data.Init();
          while (data.HasMoreRows)
          { 
            string textName = Report.GetColumnValue(&quot;Data.Name&quot;).ToString();
            if(textName == table[1, i].Text) {
              table[0, i].Text = Report.GetColumnValue(&quot;Data.AdditionalName&quot;).ToString();
              table[2, i].Text = Report.GetColumnValue(&quot;Data.ObjectsCount&quot;).ToString();
              break;
           }
            data.Next();
          }
        }
      }  
      
      //adding new total row     
      int totalRowNumber = 0;
      for (int i = 0; i &lt; table.RowCount; i++)
      {
        if(table[0, i].Text == &quot;Итого&quot;){
          totalRowNumber = i;
          break;
        }       
      }    
      TableRow newRow1 = new TableRow();
      newRow1.AutoSize = true;
      table.Rows.Insert(table.RowCount, newRow1);
      for (int i = 0; i &lt; table.ColumnCount; i++)
      { 
        table[i, table.RowCount - 1].SetStyle(table[i, table.RowCount - 4]);
        String text  = table[i, totalRowNumber].Text;
        table[i, table.RowCount - 1].Text = text;     
      }
      
      TableRow newRow2 = new TableRow();
      newRow2.AutoSize = true;
      table.Rows.Insert(table.RowCount, newRow2);
      for (int i = 0; i &lt; table.ColumnCount; i++)
      { 
        table[i, table.RowCount - 1].SetStyle(table[i, table.RowCount - 4]);
        String text  = table[i, totalRowNumber + 1].Text;
        table[i, table.RowCount - 1].Text = text;     
      }  
      
      TableRow newRow3 = new TableRow();
      newRow3.AutoSize = true;
      table.Rows.Insert(table.RowCount, newRow3);
      for (int i = 0; i &lt; table.ColumnCount; i++)
      { 
        table[i, table.RowCount - 1].SetStyle(table[i, table.RowCount - 4]);
        String text  = table[i, totalRowNumber + 2].Text;
        table[i, table.RowCount - 1].Text = text;     
      } 
      
      //set RowSpan  for new total row
      table[0, table.RowCount - 3].RowSpan = 3;
      table[1, table.RowCount - 3].RowSpan = 3;
      table[2, table.RowCount - 3].RowSpan = 3;
      table[0, table.RowCount - 3].ColSpan = 2;
      
      //delete previous total rows
      table.Rows.Remove(table.Rows[totalRowNumber+2]);
      table.Rows.Remove(table.Rows[totalRowNumber + 1]);
      table.Rows.Remove(table.Rows[totalRowNumber]); 
      

      //adding new column and row for col/row numbering
      TableRow newRow = new TableRow();
      newRow.AutoSize = true;
      table.Rows.Insert(2, newRow);
      for (int i = 0; i &lt; table.ColumnCount; i++)
      {
        table[i, 2].SetStyle(table[i,3]);
        table[i, 2].Text = (i+2).ToString();
      }
      
      newColumn = new TableColumn();
      table.Columns.Insert(0, newColumn);  
      table[0, 0].Text = &quot;№ п/п&quot;;
      table[0, 0].RowSpan = 2;
      table[0, 0].SetStyle(table[1,0]);
      int j = 1;
      for (int i = 2; i &lt; table.RowCount; i++)
      {
        table[0, i].SetStyle(table[1,i]);      
        if(i == 2){
          table[0, i].Text = &quot;1&quot;;
          continue;
        }
        
        if(table[1, i].RowSpan &gt; 1){
          int rowspan = table[1, i].RowSpan;
          table[0, i].RowSpan = rowspan;
          table[0, i].Text = j.ToString();
          j++;
        }
      }
      
      //adding report title
      newRow = new TableRow();
      table.Rows.Insert(0, newRow);
      table[0, 0].ColSpan =  table.ColumnCount;
      Font font = new Font(&quot;Times New Roman&quot;, 12.0f, FontStyle.Bold);
      table[0, 0].Font = font;
      table[0, 0].HorzAlign = HorzAlign.Center;
      table[0, 0].VertAlign = VertAlign.Center;
      table[0, 0].Text = Report.GetColumnValue(&quot;Common.Title&quot;).ToString();
      table[0, 0].Padding = new System.Windows.Forms.Padding(2, 10, 2, 10);   
      table.Rows[0].AutoSize = true;
    }
    
  }

}
  </ScriptText>
  <Dictionary>
    <BusinessObjectDataSource Name="Common" ReferenceName="Common" DataType="null" Enabled="true">
      <Column Name="Title" DataType="System.String"/>
      <Column Name="DataNameColumnText" DataType="System.String"/>
    </BusinessObjectDataSource>
    <BusinessObjectDataSource Name="Data" ReferenceName="Data" DataType="null" Enabled="true">
      <Column Name="AdditionalName" DataType="System.String"/>
      <Column Name="Name" DataType="System.String"/>
      <Column Name="ObjectsCount" DataType="System.Int32"/>
      <Column Name="GroupId" DataType="System.Int64"/>
      <Column Name="UpksCalcType" DataType="System.String"/>
      <Column Name="UpksCalcValue" DataType="System.Decimal"/>
    </BusinessObjectDataSource>
    <BusinessObjectDataSource Name="GroupDictionary" ReferenceName="GroupDictionary" DataType="null" Enabled="true">
      <Column Name="GroupId" DataType="System.Int64"/>
      <Column Name="GroupName" DataType="System.String"/>
    </BusinessObjectDataSource>
  </Dictionary>
  <ReportPage Name="Page1" Landscape="true" PaperWidth="297" PaperHeight="210" RawPaperSize="9" Guides="28.35,643.74,231.09,432.69" UnlimitedHeight="true" UnlimitedWidth="true">
    <DataBand Name="BandData1" Width="1047.06" Height="212.41" Guides="0,60.52,22.72,41.62" DataSource="Data">
      <MatrixObject Name="MatrixData" Left="28.35" Width="615.39" Height="60.52" AfterDataEvent="MatrixData_AfterData" FixedRows="2" FixedColumns="2" RepeatHeaders="false" AutoSize="false" DataSource="Data" ShowTitle="true">
        <MatrixColumns>
          <Header Expression="[Data.GroupId]" Sort="None" Totals="false"/>
        </MatrixColumns>
        <MatrixRows>
          <Header Expression="[Data.Name]" Totals="false"/>
          <Header Expression="[Data.UpksCalcType]" Sort="None" Totals="false"/>
        </MatrixRows>
        <MatrixCells>
          <Cell Expression="[Data.UpksCalcValue]"/>
        </MatrixCells>
        <TableColumn Name="Column1" Width="202.74"/>
        <TableColumn Name="Column3" Width="201.6"/>
        <TableColumn Name="Column4" Width="211.05"/>
        <TableRow Name="Row1" Height="22.72" AutoSize="true">
          <TableCell Name="Cell1" Border.Lines="All" Text="[Common.DataNameColumnText]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell11" Border.Lines="All" Text="Значение" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell14" Border.Lines="All" Text="УПКС по группам объектов недвижимости, руб./кв.м" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
        <TableRow Name="Row2" AutoSize="true">
          <TableCell Name="Cell3" Border.Lines="All" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell12" Border.Lines="All" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell15" Border.Lines="All" Text="[GroupId]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
        <TableRow Name="Row3" AutoSize="true">
          <TableCell Name="Cell5" Border.Lines="All" Text="[Name]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell13" Border.Lines="All" Text="[UpksCalcType]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell16" Border.Lines="All" Text="[UpksCalcValue]" NullValue=" " HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
      </MatrixObject>
    </DataBand>
    <ReportSummaryBand Name="ReportSummary1" Top="216.41" Width="1047.06" Height="47.25"/>
  </ReportPage>
</Report>
