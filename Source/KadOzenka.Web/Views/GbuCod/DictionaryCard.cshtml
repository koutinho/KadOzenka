@model KadOzenka.Web.Models.GbuCod.CodDictionaryUpdatingModel

@using (Html.BeginForm("CodJobObjectCard", "GbuCod", FormMethod.Post))
{
    <div class="form-horizontal" style="padding: 2%;">
        @{
            await Html.RenderPartialAsync("/Views/GbuCod/Partials/_GeneralCodDictionaryInfo.cshtml", Model);
        }
        
        @for (var i = 0; i < Model.Values.Count; i++)
        {
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabel($"Значение {i + 1}")
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().TextBox().Name($"value_{i}").Value(Model.Values[i]).Enable(false)
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-sm-12">
                <button style="float: right" class="k-button" id="update" type="button">Сохранить</button>
            </div>
        </div>
    </div>
}

<div class="form-group" style="padding: 0% 0 2% 0">
    <div id="grid">

    </div>
</div>

@*
TODO удалить вместе со view
<div style="height: auto;">
    <div class="ajax-data-loading" data-request-type="GET" data-url="@Url.Content("~/RegistersView/GbuCodDictionary?Transition=1&21400200=" + @Model.Id)"
         data-param-CodJobId="@Model.Id" data-param-Pageable="true" data-param-Scrollable="true"
         data-param-partialview="true" data-loader="true" data-onsuccess="resizeGrid214"></div>
</div>
*@


<style>
    .k-grid-filter.k-state-active .k-icon.k-i-filter {
        color: #32CD32;
    }
</style>




<script id="GridToolbarTemplate" type="text/x-kendo-template">
    <div style="float: left">
        <a class="k-button" id="addValueBtn" style="width:120px;">
            Добавить
        </a>
         <a class="k-button k-state-disabled" id="updateValueBtn" style="width:120px;">
            Редактировать
        </a>
        <a class="k-button k-state-disabled" id="deleteValueBtn" style="width:120px;">
            Удалить
        </a>
        <span>Показано </span><span id="filteredObjectsCount"></span><span> из </span><span id="allObjectsCount"></span>
    </div>
</script>



<script src="~/js/custom-validation.js"></script>
<script type="text/javascript">
    var objectFieldPrefixForValue = "Coefficient_";

    $(document).ready(function() {
        $('#update').on('click', updateDictionary);
        generateGrid();
    });


    function generateGrid() {
        kendo.ui.progress($('body'), true);
        $.ajax({
            url: '@Url.Action("GetDictionaryValues", "GbuCod", new {dictionaryId = Model.Id})',
            success: function(result) {
                createGrid(result);
            },
            error: function(response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
        });
    }


    function createGrid(dictionaryItems) {
        var gridId = "#grid";
        var registerAttributesSerialized = '@Json.Serialize(Model.RegisterAttributes)';
        var registerAttributes = JSON.parse(registerAttributesSerialized);
        mapResponse(dictionaryItems, registerAttributes);
        var dataSource = new kendo.data.DataSource({
            transport:{
                read: function(options){
                    options.success(dictionaryItems);
                }
            },
            error: function (e) {
                Common.ShowError(e.xhr.responseText);
                kendo.ui.progress($('body'), false);
            },
            schema: {
                model: {
                    id: "Id",
                    fields: generateSchemaFields(registerAttributes)
                },
                data: function (response) {
                    kendo.ui.progress($('body'), false);
                    return response;
                }
            },
            pageSize: 15
        });
        var grid = $(gridId).data("kendoGrid");
        if (grid) {
            $(gridId).empty().kendoGrid();
        }
        $(gridId).kendoGrid({
            toolbar: kendo.template($("#GridToolbarTemplate").html())({ gridId: gridId}),
            filterable: {
                extra: true,
                operators: {
                    string: {
                        startswith: "Начинается с",
                        eq: "Равно",
                        neq: "Не равно",
                        isnull: "Пустое",
                        isnotnull: "Непустое"
                    }
                }
            },
            change: function() {
                $('#updateValueBtn').removeClass('k-state-disabled');
                $('#deleteValueBtn').removeClass('k-state-disabled');
            },
            dataBound: function() {
                $("#filteredObjectsCount").text(this.dataSource.total());
            },
            columns: generateColumns(registerAttributes),
            dataSource: dataSource,
            selectable: "row",
            pageable: true,
            sortable: true,
            resizable: true
        });

        $('#addValueBtn').on('click', addValue);
        $('#updateValueBtn').on('click', updateValue);
        $('#deleteValueBtn').on('click', deleteValue);
        $("#allObjectsCount").text(dictionaryItems.length);
    }

    function mapResponse(dictionaryItems, registerAttributes) {
        //заменяем список коэффициентов на отдельные поля в объекте
        //например, Coefficient_10004300: 15
        $.each(dictionaryItems, function (index, item) {
            $.each(registerAttributes, function (index, attribute) {
                var attributeId = attribute.Id;
                var values = item.Values;
                var coefficient = values == undefined
                    ? null
                    : values.find(x => x.AttributeId === attributeId);
                var coefficientFieldName = objectFieldPrefixForValue + attributeId;
                item[coefficientFieldName] = coefficient == null ? null : coefficient.Value;
            });
        });
    }

    function generateSchemaFields(registerAttributes) {
        var fields = {
            Id: {editable: false, nullable: true},
            Code: {editable: false, nullable: true}
        }
        $.each(registerAttributes, function (index, attribute) {
            var attributeId = attribute.Id;
            var coefficientFieldName = objectFieldPrefixForValue + attributeId;
            fields[coefficientFieldName] = { type: "string", editable: false };
        });
        return fields;
    }

    function generateColumns(modelAttributes) {
        var additionalColumns = [];
        modelAttributes.forEach(function(attribute) {
            var coefficientColumn = {
                field: objectFieldPrefixForValue + attribute.Id,
                headerTemplate: getColumnHeaderTemplate(attribute.Name),
                headerAttributes: { "style": "text-align: center;"},
                sortable: false,
                width: 200
            };
            additionalColumns.push(coefficientColumn);
        });
        var baseColumns = [
            {
                field: "Code",
                headerTemplate: getColumnHeaderTemplate("Код"),
                width: 50
            }
        ];
        return additionalColumns.concat(baseColumns);
    }
    function getColumnHeaderTemplate(columnName) {
        return '<label style="font-weight: normal;"> ' + columnName + ' </label>';
    }



    function addValue() {
        Common.UI.ShowWindow('Добавление значения',
            '@Url.Action("AddDictionaryValue", "GbuCod", new { dictionaryId = Model.Id})',
            'editValueWindow',
            reloadGrid,
            800, 400);
    }

    function updateValue() {
        var selectedRowData = getSelectedRowInFactorsGrid();
        Common.UI.ShowWindow('Редактирование значения',
            '@Url.Action("EditDictionaryValue", "GbuCod")' + '?dictionaryId=' + '@Model.Id' +
            '&dictionaryValueId=' + selectedRowData.Id,
            'editValueWindow',
            reloadGrid,
            800, 400);
    }

    function deleteValue() {
        var selectedRowData = getSelectedRowInFactorsGrid();
        Common.UI.ShowWindow('Удаление значения',
            '@Url.Action("DeleteDictionaryValue", "GbuCod")' + '?dictionaryId=' + '@Model.Id' +
            '&dictionaryValueId=' + selectedRowData.Id,
            'editValueWindow',
            reloadGrid,
            600, 100);
    }

    function getSelectedRowInFactorsGrid() {
        var grid = $("#grid").data("kendoGrid");
        var row = grid.select();
        if (row.length > 0) {
            var data = grid.dataItem(row);
            return data;
        }
    }

    function reloadGrid() {
        //TODO KOMO-7 придумать, как обойтись без доп запроса
        generateGrid();
    }




    function updateDictionary() {
        kendo.ui.progress($('body'), true);
        var form = $('form');
        var formObject = Common.Functions.FormToObject(form);
        $.post(form.attr('action'), formObject).done(function (response) {
            if (response.Errors) {
                var errors = getErrors(response.Errors);
                Common.ShowError(errors);
                return;
            }
            Common.ShowMessage("Обновление выполнено");
        }).fail(function (response, textStatus, errorThrown) {
            Common.ShowError(response.responseText);
        }).always(function () {
            kendo.ui.progress($('body'), false);
        });
    }

    //для совместимости с основной вьюшкой (см коммент там)
    function onValuesCountChange() {

    }

</script>