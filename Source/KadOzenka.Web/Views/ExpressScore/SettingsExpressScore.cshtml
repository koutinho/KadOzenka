@model KadOzenka.Web.Models.ExpressScore.SettingsExpressScoreViewModel

@using (Html.BeginForm("SettingsExpressScore", "ExpressScore", FormMethod.Post, htmlAttributes: new { @id = "settingsForm" }))
{
	<div class="form-horizontal col-sm-12">
		<div class="form-group"></div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Тур оценки", true)
			</div>
			<div class="col-sm-10">
				@(Html.Kendo().DropDownListFor(m => m.TourId)
					.DataTextField("Text")
					.DataValueField("Value")
					.Filter(FilterType.Contains)
					.DataSource(source =>
					{
						source.Read("GetRatingTours", "Tour");
					}).Events(
						e => e.Cascade("handleChangeTour")))
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Реестр данных", true)
			</div>
			<div class="col-sm-10">
				@(Html.Kendo().DropDownListFor(m => m.FactorRegisterId)
					.DataTextField("Text")
					.DataValueField("Value")
					.DataSource(source =>
					{
						source.Read(a => a.Action("GetFactorRegisters", "ExpressScore").Data("handlerDataRegister"));
					}).Events(
						e => e.Cascade("handleChangeRegister"))
					)
			</div>
		</div>
		@{
			int i = 0;
			foreach (var item in Model.CostFactors.ComplexCostFactor)
			{
				<fieldset>
					<div class="form-group">
						<div class="col-sm-2">
							@Html.CustomLabelFor("Имя фактора", true)
						</div>
						<div class="col-sm-6">
							@Html.KendoTextBoxFor(m => m.CostFactors.ComplexCostFactor[i].Name, false)
						</div>
						<div class="col-sm-2">
							@Html.CustomLabelFor("Коэф. влияния", true)
						</div>
						<div class="col-sm-4">
							@Html.KendoNumericTextBoxFor(m => m.CostFactors.ComplexCostFactor[i].Coefficient, 5)
						</div>
					</div>
					<div class="form-group">
						<div class="col-sm-2">
							@Html.CustomLabelFor("Имя атрибута", true)
						</div>
						<div class="col-sm-6">
							@(Html.Kendo().DropDownListFor(m => m.CostFactors.ComplexCostFactor[i].AttributeId)
								.DataTextField("Text")
								.DataValueField("Value")
								.DataSource(source =>
								{
									source.Read(a => a.Action("GetAttributes", "ExpressScore").Data("handleDataRegister"));
								})
								)
						</div>
						<div class="col-sm-2">
							@Html.CustomLabelFor("Словарь", true)
						</div>
						<div class="col-sm-4">
							@(Html.Kendo().DropDownListFor(m => m.CostFactors.ComplexCostFactor[i].DictionaryId)
								.DataTextField("Text")
								.DataValueField("Value")
								.DataSource(source =>
								{
									source.Read(a => a.Action("", "ExpressScore"));
								})
								)
						</div>
					</div>
				</fieldset>
			}
		}
	</div>
}

<script type="text/javascript">
	function handleChangeTour() {
		$('#FactorRegisterId').data('kendoDropDownList') && $('#FactorRegisterId').data('kendoDropDownList').dataSource.read();
	}

	function handlerDataRegister() {
		return {
			tourId: $('#TourId').data('kendoDropDownList') && $('#TourId').data('kendoDropDownList').value()
		}
	}

	function handleChangeRegister() {
		console.log($('[id ^= "IdAttributeKO"]'));
	}

	function handleDataRegister() {
		return {
			registerId: $('#FactorRegisterId').data('kendoDropDownList') && $('#FactorRegisterId').data('kendoDropDownList').value()
		}
	}

</script>
