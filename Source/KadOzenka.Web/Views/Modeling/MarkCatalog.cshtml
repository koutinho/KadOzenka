@using KadOzenka.Dal.GbuObject.Dto
<div class="form-horizontal col-sm-12" style="margin-top: 10px">
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Тур оценки")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("RatingTour")
                .DataTextField("Text")
                .DataValueField("Value")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read("GetRatingTours", "Tour");
                })
                .Events(e =>
                {
                    e.Cascade("reloadGroupsAndFactors");
                }))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Тип объекта")
        </div>
        <div class="col-sm-9">
            <div class="radio-inline">
                @(Html.Kendo().RadioButton()
                    .Name("ObjectType")
                    .Label("ОКС")
                    .Value((int)ObjectTypeExtended.Oks)
                    .Checked(true))
            </div>
            <div class="radio-inline">
                @(Html.Kendo().RadioButton()
                    .Name("ObjectType")
                    .Label("Земельные участки")
                    .Value((int)ObjectTypeExtended.Zu))
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Оценочная группа")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("Group")
                .DataTextField("Text")
                .DataValueField("Value")
                .OptionLabel("--Выберите группу--")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetParentGroup", "Tour").Data("getParametersForGroup"));
                })
                .Events(e =>
                {
                    e.Cascade("reloadSubGroup");
                })
            )
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Оценочная подгруппа")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("Subgroup")
                .DataTextField("Text")
                .DataValueField("Value")
                .OptionLabel("--Выберите подгруппу--")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetSubgroup", "Tour").Data("getParametersForSubGroup"));
                })
                .Events(e =>
                {
                    e.Cascade("reloadGrid");
                })
            )
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Фактор стоимости")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("Factor")
                .DataTextField("Text")
                .DataValueField("Value")
                .OptionLabel("--Выберите фактор--")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetTourFactorsByType", "Tour").Data("getParametersForFactor"));
                })
                .Events(e =>
                {
                    e.Cascade("reloadGrid");
                }))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12" style="width: 100%;">
            <div id="grid"></div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var groupId = $('#Subgroup').val();
        var factorId = $('#Factor').val();

        var gridDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetMarkCatalog", "Modeling")',
                    contentType: 'application/json; charset=utf-8',
                    data: { groupId, factorId },
                    dataType: 'json'
                },
                create: {
                    url: '@Url.Action("CreateMark", "Modeling")',
                    type: 'POST',
                    dataType: 'json'
                },
                update: {
                    url: '@Url.Action("UpdateMark", "Modeling")',
                    type: 'POST',
                    dataType: 'json'
                },
                destroy: {
                    url: '@Url.Action("DeleteMark", "Modeling")',
                    type: 'POST',
                    dataType: 'json'
                }
            },
            requestStart: function (e) {
                if (e.type == "read") {
                    kendo.ui.progress($('body'), true);
                }
            },
            requestEnd: function (e) {
                if (e.type == "read") {
                    kendo.ui.progress($('body'), false);
                }
            },
            error: function (e) {
                Common.ShowError(e.xhr.responseText);
            },
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: { editable: false, nullable: true },
                        GroupId: { editable: false},
                        FactorId: { editable: false },
                        Value: { validation: {
                            valuefactorvalidation: function (input) {
                                if (input.is("[name='Value']") && input.val() == "") {
                                    input.attr("data-valuefactorvalidation-msg", "Значение фактора обязательно");
                                    return false;
                                }
                                return true;
                            }
                        } },
                        Metka: {
                            validation: {
                                metkafactorvalidation: function (input) {
                                    if (input.is("[name='Metka']") && input.val() == "") {
                                        input.attr("data-metkafactorvalidation-msg", "Значение метки обязательно");
                                        return false;
                                    }
                                    return true;
                                }
                            }, type: "number", nullable: true
                        }
                    }
                }
            },
            change: function (e) {
                //если добавляем новое значение в грид, а к нему уже была применена фильтрация
                //чтобы отобразить новую пустую строчку, нужна дополнительная фильтрация
                if (e.action == "add") {
                    var filter = this.filter();
                    if (filter) {
                        var noValueFilter = { field: "ValueFactor", operator: "eq", value: "" };
                        var newFilter = {
                            logic: "or",
                            filters: [noValueFilter, filter]
                        };
                        this.filter(newFilter);
                    }
                }
            },
            pageSize: 5
        });

        $('#grid').kendoGrid({
            dataSource: gridDataSource,
            columns: [
                {
                    field: 'Value',
                    title: 'Значение',
                    headerAttributes: { style: "text-align: center;" }
                },
                {
                    field: 'Metka',
                    title: 'Метка',
                    headerAttributes: { style: "text-align: center;" },
                    //по умолчанию точность новой метки - 2 знака после запятой,
                    //переопределяем это
                    editor: function (container, options) {
                        $('<input name="' + options.field + '"/>')
                            .appendTo(container)
                            .kendoNumericTextBox({
                                format: "{0:n14}",
                                decimals: 14,
                                step: 0.1
                            });
                        //In case the custom editor is a widget, the developer should customize the validation warning tooltip position in order to avoid visual issues
                        var tooltipElement = $('<span class="k-invalid-msg" data-for="' + options.field + '"></span>');
                        tooltipElement.appendTo(container);
                    }
                },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }
            ],
            toolbar: ["create"],
            scrollable: true,
            editable: "inline",
            pageable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Начинается с",
                        eq: "Равно",
                        neq: "Не равно"
                    },
                    number: {
                        eq: "Равно",
                        gte: "Больше",
                        lte: "Меньше"
                    }
                }
            },
            beforeEdit: function (e) {
                if (e.model.isNew()) {
                    e.model.GroupId = $('#Subgroup').val();
                    e.model.FactorId = $('#Factor').val();
                }
            },
            save: function (e) {
                //из-за неправильного разделителя значение в контроллер приходит пустое
                //была попытка установить culture для kendoNumericTextBox - не сработало
                var initialValue = e.model.MetkaFactor.toString();
                var replacedValue = initialValue.replace(".", ",");
                e.model.MetkaFactor = replacedValue;
            }
        });


        $('[name="ObjectType"]').on('dataBound', reloadGroupsAndFactors);
        $('[name="ObjectType"]').on('change', reloadGroupsAndFactors);

        $('#grid').data("kendoGrid").bind('dataBound', SetAddButtonEnabled);
        $('#grid').data("kendoGrid").bind('change', SetAddButtonEnabled);
    });




    function reloadGroupsAndFactors() {
        reloadDropDownList("Group");
        reloadDropDownList("Factor");
    }

    function reloadSubGroup() {
        reloadDropDownList("Subgroup");
    }

    function reloadDropDownList(name) {
        var list = $('[name="' + name + '"]').data("kendoDropDownList");
        list.dataSource.filter("");
        list.dataSource.read();
    }


    function reloadGrid() {
        $("#grid").data("kendoGrid").dataSource.filter({});
        GridInit();
        SetAddButtonEnabled();
    }


    function getParametersForGroup() {
        var objectType = $('input[name="ObjectType"]:checked').val();
        return {
            type: objectType,
            id: '',
            tourId: $('#RatingTour').val()
        }
    }

    function getParametersForSubGroup() {
        return {
            groupId: $('#Group').val(),
            tourId: $('#RatingTour').val()
        }
    }

    function getParametersForFactor() {
        var objectType = $('input[name="ObjectType"]:checked').val();
        return {
            type: objectType,
            tourId: $('#RatingTour').val()
        }
    }


    function GridInit() {
        var groupId = $('#Subgroup').val();
        var factorId = $('#Factor').val();
        var data = { groupId, factorId };
        $("#grid").data("kendoGrid").dataSource.read(data);
    }


    function SetAddButtonEnabled() {
        var groupId = $('#Subgroup').val();
        var factorId = $('#Factor').val();
        if (groupId == '' || factorId == '') {
            $('.k-grid-add').addClass('k-state-disabled');
        }
        else {
            $('.k-grid-add').removeClass('k-state-disabled');
        }
    }
</script>