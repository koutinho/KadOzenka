@using KadOzenka.Dal.GbuObject.Dto


@*
<!-- Модальное окно для загрузки справочника меток -->
<div id="uploadMarksCatalogModal" style="display: none; padding: 2%;">
</div>
*@


<!-- Окно с основной информацией -->
<div class="form-horizontal col-sm-12" style="margin-top: 10px">
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Тур оценки")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("RatingTour")
                .DataTextField("Text")
                .DataValueField("Value")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read("GetRatingTours", "Tour");
                })
                .Events(e =>
                {
                    e.Cascade("reloadGroupsAndFactors");
                }))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Тип объекта")
        </div>
        <div class="col-sm-9">
            <div class="radio-inline">
                @(Html.Kendo().RadioButton()
                    .Name("ObjectType")
                    .Label("ОКС")
                    .Value((int)ObjectTypeExtended.Oks)
                    .Checked(true))
            </div>
            <div class="radio-inline">
                @(Html.Kendo().RadioButton()
                    .Name("ObjectType")
                    .Label("Земельные участки")
                    .Value((int)ObjectTypeExtended.Zu))
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Оценочная группа")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("Group")
                .DataTextField("Text")
                .DataValueField("Value")
                .OptionLabel("--Выберите группу--")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetParentGroup", "Tour").Data("getParametersForGroup"));
                })
                .Events(e =>
                {
                    e.Cascade("reloadSubGroup");
                })
            )
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Оценочная подгруппа")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("Subgroup")
                .DataTextField("Text")
                .DataValueField("Value")
                .OptionLabel("--Выберите подгруппу--")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetSubgroup", "Tour").Data("getParametersForSubGroup"));
                })
                .Events(e =>
                {
                    e.Cascade("reloadGrid");
                })
            )
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3">
            @Html.CustomLabel("Фактор стоимости")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                .Name("Factor")
                .DataTextField("Text")
                .DataValueField("Value")
                .OptionLabel("--Выберите фактор--")
                .Filter(FilterType.Contains)
                .DataSource(source =>
                {
                    source.Read(read => read.Action("GetTourFactorsByType", "Tour").Data("getParametersForFactor"));
                })
                .Events(e =>
                {
                    e.Cascade("reloadGrid");
                }))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-12" style="width: 100%;">
            <div id="marksContent"></div>
        </div>
    </div>
</div>

@*
<script id="toolBarTemplate" type="text/x-kendo-template">
    <a class="k-button k-button-icontext k-grid-add" href="\#">Добавить</a>
    <a class="k-button k-button-icontext" id="showUploadMarksCatalogBtn" href="\#" onclick="return showUploadMarksCatalogModal()">Загрузить справочник меток</a>
</script>
*@

<script>
    $(document).ready(function () {

        $('[name="ObjectType"]').on('dataBound', reloadGroupsAndFactors);
        $('[name="ObjectType"]').on('change', reloadGroupsAndFactors);

        getMarksGrid();

        /*$('#grid').data("kendoGrid").bind('dataBound', SetAddButtonEnabled);
        $('#grid').data("kendoGrid").bind('change', SetAddButtonEnabled);
        $('#showUploadMarksCatalogBtn').on('click', showUploadMarksCatalogModal);*/
    });


    function reloadGroupsAndFactors() {
        reloadDropDownList("Group");
        reloadDropDownList("Factor");
    }

    function reloadSubGroup() {
        reloadDropDownList("Subgroup");
    }

    function reloadDropDownList(name) {
        var list = $('[name="' + name + '"]').data("kendoDropDownList");
        list.dataSource.filter("");
        list.dataSource.read();
    }


    function reloadGrid() {
        var grid = $("#marksGrid").data("kendoGrid");
        if (!grid) {
            return;
        }
        grid.dataSource.filter({});
        gridInit();
        //SetAddButtonEnabled();
    }


    function getParametersForGroup() {
        var objectType = $('input[name="ObjectType"]:checked').val();
        return {
            type: objectType,
            id: '',
            tourId: $('#RatingTour').val()
        }
    }

    function getParametersForSubGroup() {
        return {
            groupId: $('#Group').val(),
            tourId: $('#RatingTour').val()
        }
    }

    function getParametersForFactor() {
        var objectType = $('input[name="ObjectType"]:checked').val();
        return {
            type: objectType,
            tourId: $('#RatingTour').val()
        }
    }


    function gridInit() {
        var groupId = $('#Subgroup').val();
        var factorId = $('#Factor').val();
        if (groupId == 0 || factorId == 0) {
            $("#marksGrid").data("kendoGrid").dataSource.read({ dictionaryId: -1 });
        }
        kendo.ui.progress($('#marksContent'), true);
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetDictionaryId", "Modeling")',
            data: { groupId: groupId, factorId: factorId },
            success: function(response) {
                if (response && response.Errors) {
                    var errors = getErrors(response.Errors);
                    Common.ShowError(errors);
                    return;
                } else {
                    var data = { dictionaryId: response };
                    $("#marksGrid").data("kendoGrid").dataSource.read(data);
                }
            },
            error: function(response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('#marksContent'), false);
            }
        });
    }


    function getMarksGrid() {
        kendo.ui.progress($('#marksContent'), true);
        $.ajax({
            type: 'GET',
            url: '@Url.Action("MarksGrid", "Modeling")',
            data: { isReadOnly: true, dictionaryId: -1 },
            success: function(response) {
                $('#marksContent').html(response);
            },
            error: function(response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('#marksContent'), false);
            }
        });
    }


    /*function SetAddButtonEnabled() {
        var groupId = $('#Subgroup').val();
        var factorId = $('#Factor').val();
        if (groupId == '' || factorId == '') {
            $('.k-grid-add').addClass('k-state-disabled');
            $('#showUploadMarksCatalogBtn').addClass('k-state-disabled');
        } else {
            $('.k-grid-add').removeClass('k-state-disabled');
            $('#showUploadMarksCatalogBtn').removeClass('k-state-disabled');
        }
    }*/


    /*function showUploadMarksCatalogModal() {
        var groupId = $('#Subgroup').val();
        var factorId = $('#Factor').val();
        if (groupId == '' || factorId == '') {
            Common.ShowError("Нужно выбрать фактор и группу");
            return;
        }
        kendo.ui.progress($('body'), true);
        $.ajax({
            url: '@Url.Action("UploadMarksCatalog", "Modeling")',
            type: 'GET',
            data: { groupId: groupId, factorId: factorId },
            success: function (response) {
                var modal = $("#uploadMarksCatalogModal");
                modal.html(response);
                ShowModal(modal, '70%', '35%', "Загрузка меток", gridInit);
            },
            error: function (response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
        });
    }*/

</script>