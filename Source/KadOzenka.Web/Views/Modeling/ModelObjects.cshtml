@model KadOzenka.Web.Models.Modeling.AutomaticModelingModel

<!-- Модальное окно для загрузки Excel-файла -->
<div id="downloadFilesModalWnd" style="display: none; padding: 2%;">
    <div class="form-horizontal col-sm-12">
        <div class="form-group">
            <div class="col-sm-12">
                <input name="file" id="file" type="file" aria-label="files" accept=".xls,.xlsx" />
            </div>
        </div>
    </div>
</div>

<div class="form-horizontal" style="padding: 2%;">
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabel("Модель")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownListFor(m => m.Name)
                .DataTextField("Name")
                .DataValueField("Name")
                .Enable(false))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabel("Группа")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownListFor(m => m.GroupName)
                .DataTextField("Name")
                .DataValueField("Name")
                .Enable(false))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabel("Тур")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownListFor(m => m.TourYear)
                .DataTextField("Name")
                .DataValueField("Name")
                .Enable(false))
        </div>
    </div>
    <div class="form-group">
        <div id="grid"></div>
    </div>
</div>



<style>
    #grid .k-grid-header .k-header {
        text-align: center;
    }

    #grid {
        text-align: center;
    }
</style>



<script id="GridToolbarTemplate" type="text/x-kendo-template">
    <div style="float: left">
        <a class="k-button k-button-icon" id="excludeBtn" style="width:120px;">
            <span class="k-icon k-i-save" style="padding-right: 30%"></span>
            Сохранить
        </a>
        <a class="k-button k-button-icon" id="exportBtn" style="width:120px;">
            <span class="k-icon k-i-download" style="padding-right: 30%"></span>
            Выгрузить
        </a>
        <a class="k-button k-button-icon" id="uploadBtn" style="width:120px;">
            <span class="k-icon k-i-upload" style="padding-right: 30%"></span>
            Загрузить
        </a>
    </div>
</script>


<script src="~/js/common-modals.js"></script>
<script src="~/js/custom-validation.js"></script>
<script>
	$(document).ready(function () {
        updateGrid();
        initFileUploader();

        $('#excludeBtn').on('click', excludeObjectsFromCalculation);
        $('#exportBtn').on('click', exportObjectsToExcel);
        $('#uploadBtn').on('click', uploadObjects);
    });



    function updateGrid() {
        kendo.ui.progress($('body'), true);
        var modelId = '@Model.Id';
        var dataSource = new kendo.data.DataSource({
			transport: {
				read: {
					url: '@Url.Action("GetObjectsForModel", "Modeling")' + "?modelId=" + modelId,
					contentType: 'application/json; charset=utf-8',
					dataType: 'json'
				}
			},
			schema: {
				model: {
                    id: "Id",
                    EmptyField: "",
					fields: {
						Id: {editable: false, nullable: true},
						CadastralNumber: { editable: false },
                        Price: { type: "number", editable: false },
                        PriceFromModel: { type: "number", editable: false },
                        IsExcluded: { type: "boolean", editable: true },
                        IsForTraining: { type: "boolean", editable: false }
					}
                },
                data: function (response) {
                    kendo.ui.progress($('body'), false);
                    return response;
                }
            },
			pageSize: 15
        });

        var grid = $("#grid").data("kendoGrid");
        if (grid) {
            $("#grid").empty().kendoGrid();
        }

        $("#grid").kendoGrid({
            toolbar: kendo.template($("#GridToolbarTemplate").html()),
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Начинается с",
                        eq: "Равно",
                        neq: "Не равно"
                    },
                    number: {
                        gte: "Больше",
                        lte: "Меньше"
                    }
                }
            },
            columns: generateColumns(),
            dataSource: dataSource,
            pageable: true,
            sortable: true,
            resizable: true
        });

        $("#grid .k-grid-content").on("change", "input.chkbx", updateGridDataSource);
    }


    function generateColumns() {
        var model = '@Json.Serialize(Model.Attributes)';
        var modelAttributes = JSON.parse(model);
        var additionalColumns = modelAttributes.map(function (attribute) {
            var field = "Coefficients == undefined || Coefficients.find(x => x.AttributeId === " + attribute.AttributeId + " && x.Value != null) == undefined " +
                "? EmptyField " +
                ": Coefficients.find(x => x.AttributeId === " + attribute.AttributeId + " && x.Value != null).Coefficient";
            return {
                title: attribute.AttributeName,
                field: field,
                filterable: false,
                sortable: false
            };
        });
        var baseColumns = [
            {
                title: "Id",
                field: "Id",
                sortable: false
            },
            {
                title: "Исключен из расчета",
                field: "IsExcluded",
                template: '<input type="checkbox" #= IsExcluded ? \'checked="checked"\' : "" # class="chkbx" />',
                filterable: false,
                sortable: false
            },
            {
                title: "Кадастровый номер",
                field: "CadastralNumber",
                sortable: false,
                width: 200
            },
            {
                title: "Цена",
                field: "Price",
                template: '#: kendo.format("{0:c}", Price)#',
                filterable: true,
                sortable: true
            },
            {
                title: "Спрогнозированная цена",
                field: "PriceFromModel",
                template: '#: PriceFromModel == null ? "" : kendo.format("{0:c}", PriceFromModel) #',
                filterable: true,
                sortable: true
            },
            {
                title: "Объект для обучения",
                field: "IsForTraining",
                template: '<input type="checkbox" #= IsForTraining ? \'checked="checked"\' : "" # disabled />',
                filterable: false,
                sortable: false
            }
        ];
        return baseColumns.concat(additionalColumns);
    }


    function updateGridDataSource(e) {
        var grid = $("#grid").data("kendoGrid");
		var dataItem = grid.dataItem($(e.target).closest("tr"));
		dataItem.IsExcluded = this.checked;
		dataItem.IsDirty = true;
	}


    function excludeObjectsFromCalculation() {
        var modelId = '@Model.Id';
        var objects = $("#grid").data("kendoGrid").dataSource.data();
        kendo.ui.progress($('body'), true);
		$.ajax({
			type: 'POST',
			url: '@Url.Action("ChangeObjectsStatusInCalculation", "Modeling")',
			data: { objects: JSON.stringify({ objects }), modelId: modelId },
			success: function (response) {
                Common.ShowMessage(response.Message);
            },
			error: function(response) {
				Common.ShowError(response.responseText);
			},
			complete: function() {
				kendo.ui.progress($('body'), false);
			}
		});
    }


    function exportObjectsToExcel() {
        var modelId = '@Model.Id';
        //собираем данные так, как их видит юзер (с учетом фильтров и сортировки)
        var dataSource = $("#grid").data("kendoGrid").dataSource;
        var filteredDataSource = new kendo.data.DataSource({
            data: dataSource.data(),
            filter: dataSource.filter(),
            sort: dataSource.sort()
        });
        filteredDataSource.read();
        var data = filteredDataSource.view();
        var objectIds = data.map(function (attribute) {
            return attribute.Id;
        });

        kendo.ui.progress($('body'), true);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ExportModelObjectsToExcel", "Modeling")',
            data: { objectIdsStr: JSON.stringify({ 'objectIds': objectIds }), modelId: modelId},
            success: function (response) {
                var url =
                    '@Url.Action("DownloadModelObjectsFromExcel", "Modeling", new {modelName = Model.Name})&fileName=' +
                    response.FileName;
                window.location = url;
            },
            error: function(response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
        });
    }


    function uploadObjects() {
        var upload = $("#file").data("kendoUpload");
        upload.clearAllFiles();
        upload.removeAllFiles();
        var modal = $("#downloadFilesModalWnd");
        ShowModal(modal, '50%', '20%', "Загрузка объектов модели");
    }


    function initFileUploader() {
        $('#file').kendoUpload({
            multiple: false,
            localization: {
                select: 'Загрузить Файл',
                clearSelectedFiles: 'Очистить'
            },
            async: {
                autoUpload: true,
                saveUrl: '@Url.Action("ImportModelObjectsFromExcel", "Modeling")'
            },
            validation: {
                allowedExtensions: ['.xls', '.xlsx']
            },
            success: function (data) {
                Common.ShowMessage(data.response.Message);
                var modal = $('#downloadFilesModalWnd');
                modal.data("kendoWindow").close();
            },
            error: function (e) {
                $('html').html(e.XMLHttpRequest.responseText);
            }
        }).data('kendoUpload');
    }

</script>

