@using KadOzenka.Web.Models.Modeling
@using KadOzenka.Dal.Modeling.Entities
@model KadOzenka.Web.Models.Modeling.ModelingObjectsDiagramModel

<div class="form-horizontal col-sm-12" style="padding: 3%;">
    
    <div class="form-group">
        <div class="col-sm-12 col-sm-offset-2" style="width: 100%">
            <div class="col-sm-4">
                @(Html.Kendo().RadioButton()
                    .Name("sampleType")
                    .Label(TrainingSampleType.Control.GetEnumDescription())
                    .Value((int) TrainingSampleType.Control)
                    .Checked(Model.TrainingSampleType == TrainingSampleType.Control))
            </div>
            <div class="col-sm-4 col-sm-offset-1">
                @(Html.Kendo().RadioButton()
                    .Name("sampleType")
                    .Label(TrainingSampleType.Training.GetEnumDescription())
                    .Value((int) TrainingSampleType.Training)
                    .Checked(Model.TrainingSampleType == TrainingSampleType.Training))
            </div>
        </div>
    </div>

    <div class="form-group">
        @(Html.Kendo().Button()
            .Name("reloadBtn")
            .Icon("reload")
            .Content("Перестроить")
            .Events(x => x.Click("drawChartWithoutExcludedObjects")))
    </div>

    <div class="form-group">
        @(Html.Kendo().Chart<ObjectInfoForDiagram>()
            .Name("chart")
            .Title("Цена аналогов, включенных в моделирование")
            .Legend(legend => legend.Position(ChartLegendPosition.Bottom))
            .DataSource(x =>
            {
                x.Read(read => read.Action("GetObjectsForDiagram", "Modeling").Data("getParametersToDownloadObjects"));
            })
            .Series(series =>
            {
                series.Line(model => model.Price, model => model.Id)
                    .Name("Цена за кв.м.")
                    .Markers(m => m.Size(15));
            })
            .CategoryAxis(x => x.Visible(false))
            .Events(x => x.SeriesClick("excludeObjectFromCalculation")))
    </div>

</div>





<style>

</style>





<script src="~/js/common-modals.js"></script>
<script src="~/js/custom-validation.js"></script>
<script>
    var excludedObjectIds = [];

    $(document).ready(function () {
        $('[name="sampleType"]').on('change', reloadData);
    });


    


    function excludeObjectFromCalculation(chartPoint) {
        var objectId = chartPoint.category;
        Common.UI.ShowConfirm({
            title: 'Исключение из расчёта',
            content: `Исключить объект с ценой '${chartPoint.value}' из расчёта?`,
            onSuccess: function () {
                excludedObjectIds.push(objectId);
                kendo.ui.progress($('body'), true);
                $.ajax({
                    url: '@Url.Action("ExcludeObjectFromCalculation", "Modeling")',
                    type: 'POST',
                    data: { objectId: objectId },
                    success: function () {
                        Common.ShowMessage("Объект исключен");
                    },
                    error: function (response) {
                        Common.ShowError(response.responseText);
                    },
                    complete: function() {
                        kendo.ui.progress($('body'), false);
                    }
                });
            }
        });
    }


    function drawChartWithoutExcludedObjects() {
        if (excludedObjectIds.length === 0) {
            Common.ShowMessage("График не перестроен, т.к. нет исключенных объектов");
            return;
        }
        kendo.ui.progress($('body'), true);
        var chart = $("#chart").getKendoChart();
        var newDataSource = [];
        chart.options.series[0].data.forEach(serie => {
            if (!excludedObjectIds.includes(serie.Id)) {
                newDataSource.push(serie);
            }
        });
        chart.setDataSource(newDataSource);
        chart.redraw();
        kendo.ui.progress($('body'), false);
        excludedObjectIds = [];
        Common.ShowMessage("График перестроен");
    }


    function reloadData() {
        kendo.ui.progress($('body'), true);
        var chart = $("#chart").data("kendoChart");
        chart.dataSource.read();
        chart.refresh();
        kendo.ui.progress($('body'), false);
    }


    function getParametersToDownloadObjects() {
        var sampleType = $('input[name="sampleType"]:checked').val();
        return {
            modelId: '@Model.ModelId',
            trainingSampleType: sampleType
        }
    }

</script>

