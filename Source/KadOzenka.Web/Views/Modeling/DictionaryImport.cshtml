@model KadOzenka.Web.Models.Modeling.DictionaryImportModel

@using (Html.BeginForm("DictionaryImport", "Modeling", FormMethod.Post))
{
    @Html.HiddenFor(x => x.DictionaryId)

    <div class="form-horizontal col-sm-12">
        <div class="form-group"></div>
        <div class="form-group">
            <input name="files" id="files" type="file" aria-label="files" accept=".xls,.xlsx" />
        </div>
        <div class="form-group">
            <div class="col-sm-4">
                @Html.CustomLabelFor(m => m.Value)
            </div>
            <div class="col-sm-8">
                @Html.Kendo().DropDownListFor(m => m.Value).DataTextField("Name").DataValueField("Name")
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4">
                @Html.CustomLabelFor(m => m.CalculationValue)
            </div>
            <div class="col-sm-8">
                @Html.Kendo().DropDownListFor(m => m.CalculationValue).DataTextField("Name").DataValueField("Name")
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-4">
                @Html.CustomLabelFor(m => m.IsDeleteOldValues, NotSetRequired: true)
            </div>
            <div class="col-sm-8">
                @Html.CheckBoxFor(x => x.IsDeleteOldValues)
            </div>
        </div>
        <div class="form-group">
            <div>
                <span>
                    <button id="importButton" type="button" class="k-button" style="float: right">Загрузить</button>
                </span>
            </div>
        </div>
    </div>
}



@section styles {
    <style>
        .form-horizontal .form-group {
            margin-right: 0;
            margin-left: 0;
        }
    </style>
}



<script src="~/js/custom-validation.js"></script>
<script>
    var dataSource = new kendo.data.DataSource({
        data: []
    });
    var uploadControl;


    $(document).ready(function() {
        $("#@(nameof(Model.CalculationValue))").data('kendoDropDownList').setDataSource(dataSource);
        $("#@(nameof(Model.Value))").data('kendoDropDownList').setDataSource(dataSource);


        initUploadControl();
        $('#importButton').on('click', importFile);
    });





    function initUploadControl() {
        uploadControl = $('#files').kendoUpload({
            multiple: false,
            localization: {
                select: 'Загрузить Файл'
            },
            async: {
                autoUpload: true,
                saveUrl: '@Url.Action("ParseFileColumns", "DataImportByTemplate")'
            },
            validation: {
                allowedExtensions: ['.xls', '.xlsx']
            },
            success: function(e) {
                if (e.operation === "upload") {
                    dataSource.data(e.response.ColumnsNames);
                }
            },
            error: function(e) {
                dataSource.data([]);
                if (e.XMLHttpRequest.responseText) {
                    Common.ShowError(e.XMLHttpRequest.responseText);
                } else {
                    Common.ShowError("Не удалось загрузить файл");
                }
            },
            clear: function(e) {
                dataSource.data([]);
            }
        }).data('kendoUpload');
    }


    function importFile() {
        var form = $('form');
        var formObject = Common.Functions.FormToObject(form);
        var files = uploadControl.getFiles();
        if (files.length === 0) {
            Common.ShowError("Файл не выбран");
            return;
        }
        var formData = new FormData();
        formData.append("model.DictionaryId", formObject.DictionaryId);
        formData.append("model.Value", formObject.Value);
        formData.append("model.CalculationValue", formObject.CalculationValue);
        formData.append("model.IsDeleteOldValues", formObject.IsDeleteOldValues);
        formData.append("file", files[0].rawFile);
        kendo.ui.progress($('body'), true);
        $.ajax({
            type: 'POST',
            url: form.attr('action'),
            data: formData,
            contentType: false,
            processData: false,
            dataType: 'json',
            success: function(response) {
                if (response.Errors) {
                    var errors = getErrors(response.Errors);
                    Common.ShowError(errors);
                    return;
                }
                if (response.isViaLongProcess) {
                    Common.ShowMessage("Добавление справочника было поставленно в очередь долгих процессов. После окончания операции вы получите уведомление");
                } else {
                    Common.ShowMessage("Справочник успешно импортирован");
                }
            },
            error: function(response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
        });
    }

</script>

