<div class="form-horizontal" style="padding: 2%;">
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabel("Модель")
        </div>
        <div class="col-sm-9">
            @(Html.Kendo().DropDownList()
                                .Name("ModelId")
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .Filter(FilterType.Contains)
                                .DataSource(x =>
                                {
                                    x.Read("GetModels", "Modeling");
                                })
                                .Events(x =>
                                {
                                    x.DataBound("updateModelInfo");
                                    x.Change("updateModelInfo");
                                }))
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabel("Сегмент")
        </div>
        <div class="col-sm-9">
            <div id="segment"></div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabel("Тур")
        </div>
        <div class="col-sm-9">
            <div id="tour"></div>
        </div>
    </div>
    <div class="form-group">
        <div id="grid"></div>
    </div>
</div>



<style>
    #grid .k-grid-header .k-header {
        text-align: center;
    }

    #grid {
        text-align: center;
    }
</style>



<script id="GridToolbarTemplate" type="text/x-kendo-template">
    <div style="float: left">
        <a class="k-button k-button-icon" id="excludeBtn" style="width:120px;">
            <span class="k-icon k-i-save" style="padding-right: 30%"></span>
            Сохранить
        </a>
    </div>

</script>



<script src="~/js/custom-validation.js"></script>
<script>
	$(document).ready(function () {

    });



    function updateModelInfo() {
        var modelId = $("#ModelId").data("kendoDropDownList").value();
        $.ajax({
			type: 'GET',
			url: '@Url.Action("GetModelById", "Modeling")',
			data: { modelId: modelId},
			success: function (response) {
				$("#segment").kendoDropDownList({
					dataTextField: 'SegmentName',
					dataValueField: 'SegmentCode',
					dataSource: [{ SegmentCode: response.MarketSegmentCode, SegmentName: response.MarketSegment }],
					enable: false
				});
				$("#tour").kendoDropDownList({
					dataTextField: 'TourYear',
					dataValueField: 'TourId',
					dataSource: [{ TourId: response.TourId, TourYear: response.TourYear }],
					enable: false
                });
                updateGrid(response.Attributes);
            },
			error: function (response) {
				Common.ShowError(response.responseText);
			}
		});
	}


    function updateGrid(modelAttributes) {
        kendo.ui.progress($('body'), true);
        var modelId = $("#ModelId").data("kendoDropDownList").value();
        var dataSource = new kendo.data.DataSource({
			transport: {
				read: {
					url: '@Url.Action("GetObjectsForModel", "Modeling")' + "?modelId=" + modelId,
					contentType: 'application/json; charset=utf-8',
					dataType: 'json'
				}
			},
			schema: {
				model: {
                    id: "Id",
                    EmptyField: "",
					fields: {
						Id: {editable: false, nullable: true},
						CadastralNumber: { editable: false },
                        Price: { type: "number", editable: false },
                        PriceFromModel: { type: "number", editable: false },
                        IsExcluded: { type: "boolean", editable: true },
                        IsForTraining: { type: "boolean", editable: false }
					}
                },
                data: function (response) {
                    kendo.ui.progress($('body'), false);
                    return response;
                }
            },
			pageSize: 15
        });

        var grid = $("#grid").data("kendoGrid");
        if (grid) {
            $("#grid").empty().kendoGrid();
        }

        $("#grid").kendoGrid({
            toolbar: kendo.template($("#GridToolbarTemplate").html()),
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Начинается с",
                        eq: "Равно",
                        neq: "Не равно"
                    },
                    number: {
                        gte: "Больше",
                        lte: "Меньше"
                    }
                }
            }, 
            columns: generateColumns(modelAttributes),
            dataSource: dataSource,
            pageable: true,
            sortable: true
        });

        $("#grid .k-grid-content").on("change", "input.chkbx", updateGridDataSource);
        $('#excludeBtn').on('click', excludeObjectsFromCalculation);
    }


    function generateColumns(modelAttributes) {
        var additionalColumns = modelAttributes.map(function (attribute) {
            var field = "Coefficients == undefined || Coefficients.find(x => x.AttributeId === " + attribute.AttributeId + ") == undefined " +
                "? EmptyField " +
                ": Coefficients.find(x => x.AttributeId === " + attribute.AttributeId + ").Coefficient";
            return {
                title: attribute.AttributeName,
                field: field,
                filterable: false,
                sortable: false
            };
        });
        var baseColumns = [
            {
                title: "Исключен из расчета",
                field: "IsExcluded",
                template: '<input type="checkbox" #= IsExcluded ? \'checked="checked"\' : "" # class="chkbx" />',
                filterable: false,
                sortable: false
            },
            {
                title: "Кадастровый номер",
                field: "CadastralNumber",
                sortable: false
            },
            {
                title: "Цена",
                field: "Price",
                template: '#: kendo.format("{0:c}", Price)#',
                filterable: true, 
                sortable: true
            },
            {
                title: "Спрогнозированная цена",
                field: "PriceFromModel",
                template: '#: PriceFromModel == null ? "" : kendo.format("{0:c}", PriceFromModel) #',
                filterable: true,
                sortable: true
            },
            {
                title: "Объект для обучения",
                field: "IsForTraining",
                template: '<input type="checkbox" #= IsForTraining ? \'checked="checked"\' : "" # disabled />',
                filterable: false,
                sortable: false
            }
        ];
        return baseColumns.concat(additionalColumns);
    }


    function updateGridDataSource(e) {
        var grid = $("#grid").data("kendoGrid");
		var dataItem = grid.dataItem($(e.target).closest("tr"));
		dataItem.IsExcluded = this.checked;
		dataItem.IsDirty = true;
	}


    function excludeObjectsFromCalculation() {
        var modelId = $("#ModelId").data("kendoDropDownList").value();
        var objects = $("#grid").data("kendoGrid").dataSource.data();
        kendo.ui.progress($('body'), true);
		$.ajax({
			type: 'POST',
			url: '@Url.Action("ChangeObjectsStatusInCalculation", "Modeling")',
			data: { objects: JSON.stringify({ objects }), modelId: modelId },
			success: function (response) {
                Common.ShowMessage(response.Message);
            },
			error: function(response) {
				Common.ShowError(response.responseText);
			},
			complete: function() {
				kendo.ui.progress($('body'), false);
			}
		});
    }

</script>

