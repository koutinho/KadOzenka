@using ObjectModel.Directory
@model KadOzenka.Web.Models.Modeling.ManualModelingModel


@using (Html.BeginForm("ManualModelCard", "Modeling", FormMethod.Post, new { id = "saveModelForm", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.Id)
    <div id="toolbar"></div>
    <div id="SectionMainData" class="toolbarVisible form-horizontal col-sm-12">
        <div>
            @{
                await Html.RenderPartialAsync("/Views/Modeling/Partials/_GeneralModelInfo.cshtml", Model);
            }

            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(x => x.CalculationType, true)
                </div>
                <div class="col-sm-10">
                    @Html.KendoEnumDropDownListFor(x => x.CalculationType, isReadonly: Model.IsReadOnly)
                </div>
            </div>
            <div class="form-group" id="modelCalculationMethod" style="display: none;">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(x => x.CalculationMethodCode, true)
                </div>
                <div class="col-sm-10">
                    @Html.KendoEnumDropDownListFor(x => x.CalculationMethodCode, isReadonly: Model.IsReadOnly)
                </div>
            </div>
        </div>

        <div style="border: 1px solid #cccdcf; padding: 1%;">
            <div class="form-group">
                <div class="col-sm-1 col-sm-offset-11">
                    @(Html.Kendo().Button()
                        .Name("copyFormulaBtn")
                        .Icon("k-icon k-i-copy")
                        .HtmlAttributes(new { style = "float: right;" }))
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    @Html.HiddenFor(x => x.Formula)
                    <div style="text-align: center" id="mathFormula">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(x => x.A0)
                </div>
                <div class="col-sm-10">
                    @Html.KendoNumericTextBoxFor(x => x.A0, isReadonly: false, precision: 14)
                </div>
            </div>

            <div style="padding-top: 2%;">
                <div id="factorToolbar"></div>
            </div>
            <div style="display: flex;">
                <div style="align-items: stretch">
                    <div id="grid"></div>
                </div>
            </div>
        </div>
    </div>
}




<script type="text/javascript" async src="~/js/MathJax/es5/startup.js"></script>
<script src="~/js/modeling.js"></script>
<script src="~/js/common-modals.js"></script>
<script src="~/js/custom-validation.js"></script>
<script>

    $(document).ready(function () {
        $('#@nameof(Model.CalculationType)').data("kendoDropDownList").enable(!isReadOnly);
        $('#@nameof(Model.CalculationMethodCode)').data("kendoDropDownList").enable(!isReadOnly);
        initCopyButton();

        if (isReadOnly){
            $('#SectionMainData').switchClass('toolbarVisible', 'toolbarHidden', 0);
        }

        $('#toolbar').kendoToolBar({
            items: [
                {
                    type: 'button',
                    text: '',
                    attributes: { title: "Обновить" },
                    icon: 'refresh',
                    click: UpdateView
                },
                {
                    type: 'button',
                    text: '',
                    attributes: { title: "Сохранить" },
                    icon: 'save',
                    click: UpdateModel
                }
            ]
        });
        $('#factorToolbar').kendoToolBar({
            items: [
                {
                    type: 'button',
                    id: 'add-factor',
                    text: '',
                    attributes: { title: "Добавить" },
                    icon: 'add',
                    hidden: isReadOnly
                },
                {
                    type: 'button',
                    id: 'edit-factor',
                    text: '',
                    attributes: { title: "Изменить" },
                    icon: 'edit',
                    hidden: isReadOnly
                },
                {
                    type: 'button',
                    id: 'remove-factor',
                    text: '',
                    attributes: { title: "Удалить" },
                    icon: 'delete',
                    hidden: isReadOnly
                }
            ]
        });
        $(".k-toolbar [title]").kendoTooltip({
            position:"top"
        });
        if (isReadOnly) {
            $('#toolbar').hide();
        }


        var gridDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("GetModelAttributes", "Modeling")',
                    contentType: 'application/json; charset=utf-8',
                    data: getDataForModelAttributesDownloader,
                    dataType: 'json'
                }
            }
        });
        $('#grid').kendoGrid({
            dataSource: gridDataSource,
            columns: [
                {
                    field: 'AttributeName',
                    title: 'Фактор',
                    width: "40%"
                },
                {
                    field: 'MarkType',
                    title: 'Тип метки'
                },
                {
                    field: 'DictionaryName',
                    title: 'Справочник',
                    attributes: { style: "text-align: center;" }
                },
                {
                    field: 'Coefficient',
                    title: 'Коэффициент'
                },
                {
                    field: 'CorrectingTerm',
                    title: 'Корректирующее слагаемое',
                    headerAttributes: { style: "word-wrap: break-word;" }
                },
                {
                    field: 'K',
                    title: 'К'
                },
                {
                    field: 'Correction',
                    title: 'Поправка'
                }
            ],
            width: '100%',
            scrollable: true,
            selectable: true
        });
        $('#grid').data("kendoGrid").tbody.kendoTooltip({
            filter: "td",
            content: function (e) {
                return e.target.text();
            },
            position: "top",
            autoHide: true,
            showAfter: 500
        });

        $('#@nameof(Model.AlgorithmTypeForCadastralPriceCalculation)').data('kendoDropDownList').bind('change', downloadInfoDependedOnAlgorithmType);
        downloadInfoDependedOnAlgorithmType();

        $('#@nameof(Model.CalculationType)').data('kendoDropDownList').bind('change', onCalculationTypeChanged);
        onCalculationTypeChanged();

        $("#grid").data("kendoGrid").bind('change', onGridChanged);
        $("#grid").data("kendoGrid").bind('dataBound', onGridChanged);

        $('#add-factor').on('click', addFactor);
        $('#edit-factor').on('click', editFactor);
        $('#remove-factor').on('click', deleteFactor);
    });





    function onCalculationTypeChanged() {
        var dropdownList = $('#@nameof(Model.CalculationType)').data('kendoDropDownList');
		if (!dropdownList)
			return;
		var calculationType = dropdownList.value();
		if (calculationType == '@KoCalculationType.Comparative.GetEnumCode()') {
			$("#modelCalculationMethod").show();
		} else {
			$("#modelCalculationMethod").hide();
		}
    }


    function UpdateView() {
        @{
            if (!Model.IsPartial)
            {
                <text>
                    location.reload();
                    redrawFormula();
                </text>
            }
            else
            {
                <text>
                    //метод из TourCard
                    UpdateMainContent();
                </text>
            }
        }
    }


	function UpdateModel() {
		var form = $('#saveModelForm');
		var formObject = Common.Functions.FormToObject(form);
		kendo.ui.progress($('body'), true);
		$.ajax({
			type: form.attr('method'),
			url: form.attr('action'),
			data: formObject,
			success: function (e) {
				Common.ShowMessage('Сохранено');
				UpdateView();
			},
			error: function (e) {
				Common.ShowError(e.responseText);
			},
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
		});
    }


    function getDataForModelAttributesDownloader() {
        var modelType = getModelAlgorithmType();
        return { modelId: '@Model.Id', type: modelType }
    }
    function getModelAlgorithmType() {
        return $('#@nameof(Model.AlgorithmTypeForCadastralPriceCalculation)').data('kendoDropDownList').value();
    }


    function getSelectedRowInFactorsGrid() {
        var grid = $("#grid").data("kendoGrid");
        var row = grid.select();
        if (row.length > 0) {
            var data = grid.dataItem(row);
            return data;
        }
    }


   
    function downloadInfoDependedOnAlgorithmType() {
        var algType = getModelAlgorithmType();
        var modelId = '@Model.Id';
        getInfoDependedOnAlgorithmType(modelId, algType);
    }


    function onGridChanged() {
        var grid = $("#grid").data("kendoGrid");
        var row = grid.select();
        if (row.length == 0) {
            $('#edit-factor').addClass('k-state-disabled');
            $('#remove-factor').addClass('k-state-disabled');
        }
        else {
            $('#edit-factor').removeClass('k-state-disabled');
            $('#remove-factor').removeClass('k-state-disabled');
        }
    }


    function addFactor() {
        var modelType = $('#@nameof(Model.AlgorithmTypeForCadastralPriceCalculation)').data('kendoDropDownList').value();
        Common.UI.ShowWindow('Добавление фактора',
            '@Url.Action("EditManualModelFactor", "Modeling")' + '?generalModelId=@Model.Id' + '&type=' + modelType,
            'editFactorWindow',
            function (e, param) {
                if (param == true) {
                    UpdateView();
                }
            },
            800, 480);
    }


    function editFactor() {
        var selectedRowData = getSelectedRowInFactorsGrid();
        if (selectedRowData) {
            Common.UI.ShowWindow('Редактирование фактора',
                '@Url.Action("EditManualModelFactor", "Modeling")' + '?id=' + selectedRowData.Id + '&generalModelId=@Model.Id',
                'editFactorWindow',
                function (e, param) {
                    if (param == true) {
                        UpdateView();
                    }
                },
                800, 480);
        }
    }


    function deleteFactor() {
        var selectedRowData = getSelectedRowInFactorsGrid();
        if (selectedRowData) {
            Common.UI.ShowConfirm({
                title: 'Удаление фактора',
                content: 'Удалить фактор?',
                onSuccess: function () {
                    kendo.ui.progress($('body'), true);
                    $.ajax({
                        url: '@Url.Action("DeleteManualModelFactor", "Modeling")',
                        type: 'POST',
                        data: { id: selectedRowData.Id },
                        success: function (response) {
                                if (response.Errors) {
                                    var errors = getErrors(response.Errors);
                                    Common.ShowError(errors);
                                    return;
                                } else {
                                    Common.ShowMessage("Удаление выполненно");
                                    UpdateView();
                                }
                        },
                        error: function (response) {
                            Common.ShowError(response.responseText);
                        },
                        complete: function() {
                            kendo.ui.progress($('body'), false);
                        }
                    });
                }
            });
        }
    }

</script>


<link rel="stylesheet" href="~/css/modeling.css" />
<style>
    .factor-buttons button {
        width: 10rem;
        margin-bottom: 5px !important;
        display: block;
    }
    #toolbar{
            position: fixed;
            /*background-color: white;*/
            z-index: 2;
            width: 100%;
            border-color: #e5e6eb;
            border-width: 1px 0;
            left: -1px; top: -1px;
        }
    .toolbarVisible{
        padding-top: 6%;
     }
     .toolbarHidden{
        padding-top: 1%;
     }
</style>