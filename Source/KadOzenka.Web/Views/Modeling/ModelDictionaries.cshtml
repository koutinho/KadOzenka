@using KadOzenka.Web.Helpers
@using KadOzenka.Web.Models.DataImport
@using KadOzenka.Web.Models.Modeling

<!-- Модальное окно для загрузки справочника меток -->
<div id="uploadMarksCatalogModal" style="display: none; padding: 2%;">
</div>

<div class="form-horizontal" style="padding: 3%">
    @Html.RenderHelpButton()


    <div class="form-group">
        @(Html.Kendo().ToolBar()
            .Name("dictionaryCommandsToolBar")
            .Items(items => 
            {
                items.Add().Type(CommandType.Button)
                    .Icon("refresh").Click("reloadGrid")
                    .HtmlAttributes(new { title = "Обновить" });

                items.Add().Type(CommandType.Button)
                    .Icon("clock").Click("showMarks")
                    .HtmlAttributes(new { id="show-marks", title = "Просмотреть метки" });
                
                items.Add().Type(CommandType.Button)
                    .Icon("download").Click("downloadMarksCatalog")
                    .HtmlAttributes(new { id="download-marks-catalog", title = "Выгрузить справочник меток" });
                
                items.Add().Type(CommandType.Button)
                    .Icon("upload").Enable(!ViewBag.IsReadOnly).Click("showModalToUploadMarksCatalog")
                    .HtmlAttributes(new { id="upload-marks-catalog", title = "Загрузить справочник меток" });
            }))

        @(Html.Kendo().Grid<GeneralModelAttributeModel>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(x => x.AttributeName).Title("Фактор");
                columns.Bound(x => x.DictionaryName).Title("Словарь");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetModelDictionaries", "Modeling", new {modelId = ViewBag.ModelId}).Type(HttpVerbs.Get))
                .Model(x =>
                {
                    x.Id(p => p.Id);
                    x.Field(c => c.AttributeName).Editable(false);
                    x.Field(c => c.DictionaryName).Editable(false);
                    x.Field(c => c.DictionaryId).Editable(false);
                }))
            .Events(x => x.DataBound("changeButtonsAbility").Change("changeButtonsAbility"))
            .Selectable()
            .HtmlAttributes(new {@class = "normalized-factors-grid"}))
    </div>
</div>



<script src="~/js/common-modals.js"></script>
<script src="~/js/custom-validation.js"></script>
<script src="~/js/toolbars.js"></script>
<script>
    $(document).ready(function() {

    });


    function changeButtonsAbility() {
        var selectedRowData = getSelectedRowInGrid();
        if (selectedRowData) {
            $('#show-marks').removeClass('k-state-disabled');
            $('#download-marks-catalog').removeClass('k-state-disabled');
            $('#upload-marks-catalog').removeClass('k-state-disabled');
        } else {
            $('#show-marks').addClass('k-state-disabled');
            $('#download-marks-catalog').addClass('k-state-disabled');
            $('#upload-marks-catalog').addClass('k-state-disabled');
        }
    }


    function reloadGrid() {
        $('#grid').data('kendoGrid').dataSource.read();
    }


    function showMarks() {
        var selectedRowData = getSelectedRowInGrid();
        if (selectedRowData) {
            var dictionaryId = selectedRowData.DictionaryId;
            Common.UI.ShowWindow('Метки',
                '@Url.Action("MarksGrid", "Modeling", new {isReadOnly = ViewBag.IsReadOnly})' + '&dictionaryId=' + dictionaryId,
                'marksWindow',
                function (e) {},
                800, 400);
        }
    }


    function showModalToUploadMarksCatalog() {
        var selectedRowData = getSelectedRowInGrid();
        if (selectedRowData) {
            var dictionaryId = selectedRowData.DictionaryId;
            kendo.ui.progress($('body'), true);
            $.ajax({
                url: '@Url.Action("DictionaryImport", "Modeling")',
                type: 'GET',
                data: { dictionaryId: dictionaryId },
                success: function (response) {
                    var modal = $("#uploadMarksCatalogModal");
                    modal.html(response);
                    ShowModal(modal, '80%', '60%', "Загрузка меток");
                },
                error: function (response) {
                    Common.ShowError(response.responseText);
                },
                complete: function() {
                    kendo.ui.progress($('body'), false);
                }
            });
        }
    }

    
    function downloadMarksCatalog() {
        var selectedRowData = getSelectedRowInGrid();
        if (selectedRowData) {
            var dictionaryId = selectedRowData.DictionaryId;
            window.open('@Url.Action("DownloadMarksCatalog2", "Modeling")' + '?dictionaryId=' + dictionaryId);
        }
    }


    function getSelectedRowInGrid() {
        var grid = $("#grid").data("kendoGrid");
        var row = grid.select();
        if (row.length > 0) {
            var data = grid.dataItem(row);
            return data;
        }
        return null;
    }
</script>