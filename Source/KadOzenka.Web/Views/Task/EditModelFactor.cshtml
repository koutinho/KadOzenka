@model KadOzenka.Web.Models.Task.FactorModel

@using (Html.BeginForm("EditModelFactor", "Task", FormMethod.Post, new {id = "updateFactorForm"}))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.GeneralModelId)
    <div class="form-horizontal col-sm-12" style="margin-top: 10px">
        <div class="form-group">
            <div class="col-sm-3">
                @Html.CustomLabel("Фактор")
            </div>
            <div class="col-sm-9">
                @Html.Kendo().DropDownListFor(x => x.FactorId).Enable(Model.Id == -1).HtmlAttributes(new {style = "width: 100%;"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3">
                @Html.CustomLabel("Коэффициент")
            </div>
            <div class="col-sm-9">
                @Html.KendoNumericTextBoxFor(x => x.B0, precision: 5, isReadonly: false)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3">
                @Html.CustomLabel("Вес фактора")
            </div>
            <div class="col-sm-9">
                @Html.KendoNumericTextBoxFor(x => x.Weight, precision: 15, isReadonly: false)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-3">
                @Html.CustomLabel("Деление на фактор")
            </div>
            <div class="col-sm-9">
                @Html.CheckBoxFor(x => x.SignDiv)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3">
                @Html.CustomLabel("Суммировать фактор")
            </div>
            <div class="col-sm-9">
                @Html.CheckBoxFor(x => x.SignAdd)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3">
                @Html.CustomLabel("Использовать метку")
            </div>
            <div class="col-sm-9">
                @Html.CheckBoxFor(x => x.SignMarket)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-2 col-sm-offset-8">
                <button class="btn btn-default btn-block" id="cancel">Отмена</button>
            </div>
            <div class="col-sm-2">
                <button class="btn btn-default btn-block" id="save">Сохранить</button>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {

        $('#save').on('click', saveFactor);

        $('#cancel').on('click', function () {
            Common.UI.CloseWindow('editFactorWindow', window.parent);
        });

        initAttributes();
    });



    function saveFactor() {
        //FactorId: $('#@nameof(Model.FactorId)').data("kendoDropDownTree").value()
        var form = $('#updateFactorForm');
        var formObject = Common.Functions.FormToObject(form);
        $.ajax({
            url: form.attr('action'),
            data: formObject,
            success: function (response) {
                kendo.ui.progress($('body'), false);
                Common.ShowMessage('Сохранение выполнено');
                Common.UI.CloseWindow('editFactorWindow', window.parent, true);
            },
            error: function (response) {
                kendo.ui.progress($('body'), false);
                Common.ShowError(response.responseText);
            }
        });
    }


    function initAttributes() {
        kendo.ui.progress($('body'), true);
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetAllAttributesByModel", "Modeling")',
            data: { generalModelId: '@Model.GeneralModelId' },
            dataType: "json",
            traditional: true,
            success: function(response) {
                var data = response.map(function(item) {
                    return {
                        Text: item.Text,
                        Value: item.Value,
                        items: item.Items.map(function(i) {
                            return {
                                Text: i.Text,
                                Value: i.Value
                            }

                        })
                    }
                });
                var attribute = $('#@nameof(Model.FactorId)').data("kendoDropDownTree");
                if (attribute) {
                    attribute.setDataSource(data);
                    attribute.value('');
                } else {
                    attribute = $('#@nameof(Model.FactorId)').kendoDropDownTree({
                        dataTextField: 'Text',
                        dataValueField: 'Value',
                        dataSource: data,
                        filter: "contains"
                    }).data("kendoDropDownTree");
                    //нельзя выбирать корневой элемент дерева (таблицу)
                    var attributeTableTreeSelect = function(e){
                        if(e.sender.dataItem(e.node).hasChildren) {
                            e.preventDefault();
                        }
                    };
                    attribute.treeview.bind("select", attributeTableTreeSelect);
                    if('@Model.FactorId')
                        attribute.value('@Model.FactorId');
                }
            },
            error: function(response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
        });
    }


</script>
