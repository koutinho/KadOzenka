@*@model KadOzenka.Web.Models.MarketObject.OutliersSettingsImportModel

@using (Html.BeginForm("OutliersCheckingSettingsImport", "MarketObjects", FormMethod.Post))
{
    <div class="form-horizontal col-sm-12">
        <div class="form-group"></div>
        <div class="form-group">
            <input name="files" id="files" type="file" aria-label="files" accept=".xls,.xlsx" />
        </div>
        <fieldset class="outliers-settings-import-fieldset">
            <legend>Соотношение параметров и столбцов файла</legend>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.ZoneColumnName)
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().DropDownListFor(m => m.ZoneColumnName).DataTextField("Name").DataValueField("Name")
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.DistrictColumnName)
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().DropDownListFor(m => m.DistrictColumnName).DataTextField("Name").DataValueField("Name")
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.RegionColumnName)
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().DropDownListFor(m => m.RegionColumnName).DataTextField("Name").DataValueField("Name")
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.MinCoefColumnName)
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().DropDownListFor(m => m.MinCoefColumnName).DataTextField("Name").DataValueField("Name")
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.MaxCoefColumnName)
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().DropDownListFor(m => m.MaxCoefColumnName).DataTextField("Name").DataValueField("Name")
                </div>
            </div>
        </fieldset>
        <div class="form-group">
            <div class="col-sm-offset-9 col-sm-3">
                @Html.Kendo().CheckBoxFor(x => x.DeleteOldValues)
            </div>
        </div>
        <div class="form-group">
            <div>
                <span>
                    <button id="outliersCheckingImportButton" type="button" class="k-button" style="float: right">Загрузить</button>
                </span>
            </div>
        </div>
    </div>
}

@section styles {
    <style>
        .form-horizontal .form-group {
            margin-right: 0;
            margin-left: 0;
        }

        fieldset.outliers-settings-import-fieldset {
            border: 1px solid #c8c6cc;
            border-radius: 10px;
            margin-bottom: 0.8em;
        }

        fieldset.outliers-settings-import-fieldset legend {
            font-size: initial;
            margin: 10px;
        }

    </style>
}

<script src="~/js/custom-validation.js"></script>
<script>
    var dataSource = new kendo.data.DataSource({
        data: [ ]
    });
    var uploadControl;

    $(document).ready(function () {
        $(`#@(nameof(Model.ZoneColumnName))`).data('kendoDropDownList').setDataSource(dataSource);
        $(`#@(nameof(Model.DistrictColumnName))`).data('kendoDropDownList').setDataSource(dataSource);
        $(`#@(nameof(Model.RegionColumnName))`).data('kendoDropDownList').setDataSource(dataSource);
        $(`#@(nameof(Model.MinCoefColumnName))`).data('kendoDropDownList').setDataSource(dataSource);
        $(`#@(nameof(Model.MaxCoefColumnName))`).data('kendoDropDownList').setDataSource(dataSource);

        uploadControl = $('#files').kendoUpload({
            multiple: false,
            localization: {
                select: 'Загрузить Файл'
            },
            async: {
                autoUpload: true,
                saveUrl: '@Url.Action("ParseFileColumns", "DataImportByTemplate")'
            },
            validation: {
                allowedExtensions: ['.xls', '.xlsx']
            },
            success: function (e) {
                if (e.operation === "upload") {
                    dataSource.data(e.response.ColumnsNames);
                }
            },
            error: function (e) {
                dataSource.data([]);
                if (e.XMLHttpRequest.responseText) {
                    Common.ShowError(e.XMLHttpRequest.responseText);
                } else {
                    Common.ShowError("Не удалось загрузить выбранный файл");
                }
            },
            clear: function (e) {
                dataSource.data([]);
            }
        }).data('kendoUpload');

        $('#outliersCheckingImportButton').on('click',
            function () {
	            var form = $('form');
                var formObject = Common.Functions.FormToObject(form);

                var files = uploadControl.getFiles();
                if (files.length === 0) {
                    Common.ShowError("Файл не выбран");
                    return;
                }

                var formData = new FormData();
                formData.append("viewModel.ZoneColumnName", formObject.ZoneColumnName);
                formData.append("viewModel.DistrictColumnName", formObject.DistrictColumnName);
                formData.append("viewModel.RegionColumnName", formObject.RegionColumnName);
                formData.append("viewModel.MinCoefColumnName", formObject.MinCoefColumnName);
                formData.append("viewModel.MaxCoefColumnName", formObject.MaxCoefColumnName);
                formData.append("viewModel.DeleteOldValues", formObject.DeleteOldValues);
                formData.append("file", files[0].rawFile);
	            kendo.ui.progress($('body'), true);
                $.ajax({
                    type: 'POST',
                    url: form.attr('action'),
                    data: formData,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
					success: function (response) {
                        if (response.Errors) {
                            var errors = getErrors(response.Errors);
                            Common.ShowError(errors);
                            return;
                        }

                        window.location = '@Url.Action("DownloadImportResultFile", "DataImport")' + '?importId=' + response.importId;
                        Common.ShowMessage('Данные успешно импортированы');
                    },
                    error: function (response) {
                        Common.ShowError(response.responseText);
                    },
                    complete: function (data) {
                        kendo.ui.progress($('body'), false);
                    }
                });
            });
    });
</script>

*@