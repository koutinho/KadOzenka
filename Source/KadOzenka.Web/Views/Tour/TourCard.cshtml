<div class="flex-content">
    <!-- Модальное окно для добавления Тура -->
    <div id="tourAdditionModal" style="display: none;  padding: 2%;">
        <div class="form-group">
            <label for="addTourInput"> Наименование </label>
            <input id="addTourInput" class="form-control" required="required" type="number" name="addTour"/>
            <button class="btn btn-default" style="margin-top: 10px;" id="saveTour"> Сохранить </button>
        </div>
    </div>
    
    <!-- Модальное окно для добавления Группы/Подгруппы -->
    <div id="groupAdditionModal" style="display: none; padding: 2%;">
        <div class="form-group">
            <div class="row">
                <div class="col-sm-4">
                    <label>Тур:</label>
                </div>
	            <div class="col-sm-7 col-sm-offset-1">
		            <input id="tourYearId" type="text" style="display: none" />
		            <label id="tourYear"></label>
	            </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-sm-4">
                    <label>Основная группа:</label>
                </div>
                <div class="col-sm-7 col-sm-offset-1">
                    <input id="mainGroupId" type="text" style="display: none" />
                    <label id="mainGroupName"></label>
                </div>
            </div>
        </div>
        <div id="groupForm" class="form-group">
            <div class="row">
                <div class="col-sm-4">
                    <label>Группа:</label>
                </div>
                <div class="col-sm-7 col-sm-offset-1">
                    <input id="groupId" type="text" style="display: none" />
                    <label id="groupName"></label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-sm-4">
                    <label for="addGroupInput"> Наименование </label>
                </div>
                <div class="col-sm-7 col-sm-offset-1">
                    <textarea id="addGroupInput" class="form-control" required="required" name="addGroupInput" rows="3"></textarea>
                    <button class="btn btn-default" style="margin-top: 10px;" id="saveGroup"> Сохранить </button>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <!-- Дерево и правая панель для редактирования -->
        <div class="row">
            <div class="k-content wide flex-tree-list col-sm-5">
                <div id="treeList" class="height-constraint"></div>
                @(Html.Kendo().ToolBar()
                    .Name("additionToolbar")
                    .Items(items =>
                    {
                        items.Add().Type(CommandType.SplitButton).Text("")
                            .Icon("add").HtmlAttributes(new { style = "color: green;" })
                            .MenuButtons(menuButtons =>
                            {
                                menuButtons.Add().Text("Тур").Id("add-tour");
                                menuButtons.Add().Text("Группа").Id("add-group");
                                menuButtons.Add().Text("Подгруппа").Id("add-subgroup");
                            });
                    }))
            </div>
            <div class="col-sm-6">
                <div id="mainContent">

                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/groups.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#additionToolbar').removeClass("k-widget");

        $("#add-tour").click(function () {
            var modal = $("#tourAdditionModal");
            ShowModal(modal, '25%', '15%');
        });
        $("#saveTour").click(function () {
            SaveTour();
        });


        $("#add-group").click(function () {
            $("#groupForm").hide();
            ShowAddGroupModal();
        });
        $("#add-subgroup").click(function () {
            $("#groupForm").show();
            ShowAddSubGroupModal();
        });
        $("#saveGroup").click(function () {
            SaveGroup($("#groupForm").is(":visible"));
        });


		DownloadTours();
    });

	

	function DownloadTours() {
		kendo.ui.progress($('body'), true);
		$.ajax({
			type: 'GET',
			url: "@Url.Action("GetAllTours", "Tour")",
			dataType: "json",
			success: function(response) {
				var data = response.map(function(tour) {
					return {
						Id: tour.Id,
						GroupName: tour.GroupName,
						IsTour: true,
						UrlForEdit: tour.UrlForEdit,
						GroupType: tour.GroupType,
						AreGroupsDownloaded: false,
						items: tour.Items.map(function(emptyGroup) {
							return {
								Id: emptyGroup.Id,
								GroupName: emptyGroup.GroupName
							}
						})
					}
				});
				$("#treeList").kendoTreeView({
					dataSource: data,
					dataTextField: 'GroupName',
					dataValueField: 'Id',
					change: UpdateMainContent,
					expand: function (tree) {
						DownloadGroupsForTour(tree);
					}
				});

				FocusOnTour();
			},
			error: function(response) {
				Common.ShowError(response.responseText);
			},
			complete: function() {
				kendo.ui.progress($('body'), false);
			}
		});
	}


	function DownloadGroupsForTour(tree) {
		var node = $('#treeList').data('kendoTreeView').dataItem(tree.node);
		//подгружаем список групп только для тура и только один раз
		if (!node || !node.IsTour || node.AreGroupsDownloaded)
			return;
		var tourId = node.Id;
		kendo.ui.progress($('body'), true);
		$.ajax({
			type: 'GET',
			url: "@Url.Action("GetGroupsForTour", "Tour")",
			data: { tourId: tourId },
			dataType: "json",
			success: function (response) {
				if (!response)
					return;
				var result = MapTourGroups(response);
				node.items.length = 0;
				result.forEach(function(e) {
					node.items.push(e);
				});
				node.AreGroupsDownloaded = true;
				FocusOnGroup();
			},
			error: function(response) {
				Common.ShowError(response.responseText);
			},
			complete: function() {
				kendo.ui.progress($('body'), false);
			}
		});
	}



	function UpdateMainContent() {
		var row = GetSelectedRowInTree();
		if (row.length > 0) {
			var data = GetDataFromRowInTree(row);
			$('#mainContent').load(data.UrlForEdit);
		}
    }


    function GetSelectedRowInTree() {
		var treeList = $("#treeList").data("kendoTreeView");
        return treeList.select();
    }


    function GetDataFromRowInTree(row) {
		var treeList = $("#treeList").data("kendoTreeView");
        var data = treeList.dataItem(row);
        return data;
	}


	function GetParentFromTree(row) {
		var tree = $("#treeList").data("kendoTreeView");
		var parent = tree.parent(row);
		return parent;
	}


	function FocusOnTour() {
		var tourId = '@ViewBag.ChangedTourId';
		if (tourId == 0)
			return;
		var treeView = $("#treeList").data("kendoTreeView");
		var allData = treeView.dataSource._data;
		ExpandNode(allData, tourId, true);
		ScrollToSelectedNode();
	}


    var shouldFocus = true;
	function FocusOnGroup() {
		if (!shouldFocus)
			return;
	    var tourId = '@ViewBag.ChangedTourId';
	    var parentGroupId = '@ViewBag.ChangedGroupParentGroupId';
		var groupId = '@ViewBag.ChangedGroupId';
		if (tourId == 0 || parentGroupId == 0 || groupId == 0)
		    return;
	    var treeView = $("#treeList").data("kendoTreeView");
	    var allData = treeView.dataSource._data;
	    allData.forEach(function(tour) {
			if (tour.Id == tourId) {
				var mainGroups = tour.children._data;
				var isParentWasFound = false;
				//раскрыть списки до группы
			    mainGroups.forEach(function(mainGroup) {
					if (mainGroup.Id == parentGroupId) {
						isParentWasFound = true;
						var groups = mainGroup.children._data;
						ExpandNode(mainGroups, parentGroupId, false);
						ExpandNode(groups, groupId, true);
					}
				});
				//раскрыть списки до подгруппы
				if (!isParentWasFound) {
					mainGroups.forEach(function(mainGroup) {
						var groups = mainGroup.children._data;
						groups.forEach(function (group) {
							if (group.Id == parentGroupId) {
								var subGroups = group.children._data;
								subGroups.forEach(function (subGroup) {
									if (subGroup.Id == groupId) {
										ExpandNode(mainGroups, mainGroup.Id, false);
										ExpandNode(groups, parentGroupId, false);
										ExpandNode(subGroups, groupId, true);
									}
								});
							}
						});
					});
				}
		    }
		});
		ScrollToSelectedNode();
		shouldFocus = false;
	}


    function ExpandNode(allData, nodeId, shouldSelect) {
	    var treeView = $("#treeList").data("kendoTreeView");
	    allData.forEach(function (e) {
		    var node = treeView.findByUid(e.uid);
			if (e.Id == nodeId) {
				if (shouldSelect) {
					treeView.select(node);
				}
				treeView.expand(node);
			} else {
			    treeView.collapse(node);
		    }
	    });
	}


	function ScrollToSelectedNode() {
		var treeView = $("#treeList").data("kendoTreeView");
		var selectedNode = treeView.select()[0];
		if (selectedNode) {
			var itemScrollTop = GetElementTopPosition(selectedNode);
			$("#treeList").animate({ scrollTop: itemScrollTop });
		}
	}
    function GetElementTopPosition(el) {
	    var rect = el.getBoundingClientRect(),
		    scrollTop = window.pageYOffset || document.documentElement.scrollTop;
	    return rect.top + scrollTop;
    }


    function ShowInfoWindow(message) {
        Common.UI.ShowInfo({
            content: message,
            onSuccess: function() {
                Common.UI.CloseWindow('Dashboard', window.parent);
            }
        });
    }


    function ShowModal(modal, width, height) {
        if (!modal.data("kendoWindow")) {
            modal.kendoWindow({
                visible: false,
                resizable: true,
                modal: true,
                width: width,
                height: height
            }).data("kendoWindow").center();
        }
        modal.data("kendoWindow").open();
    }


    function SaveTour() {
        kendo.ui.progress($('body'), true);
        var data = {
            id: -1,
            year: $('#addTourInput').val()
        };
        $.ajax({
            type: 'POST',
            url: '@Url.Action("TourEstimates", "Tour")',
            data: data,
            success: function (response) {
                $("#tourAdditionModal").data("kendoWindow").close();
                Common.ShowMessage(response.Success);
                window.parent.location.reload(); 
            },
            error: function (response) {
                Common.ShowError(response.responseText);
            },
            complete: function() {
                kendo.ui.progress($('body'), false);
            }
        });
    }


    function ShowAddGroupModal() {
        var row = GetSelectedRowInTree();
        if (row.length <= 0) {
            ShowInfoWindow("Для добавления группы нужно выбрать строку из дерева c основной группой");
        } else {
            var data = GetDataFromRowInTree(row);
            if (data.GroupType != "2")
                ShowInfoWindow("Нужно выбрать основную группу из дерева");
            else { ;
	            var parentYear = GetParentFromTree(row);
				var parentYearData = GetDataFromRowInTree(parentYear);
	            $("#tourYearId").val(parentYearData.Id);
				$("#tourYear").html(parentYearData.GroupName);
	            $("#mainGroupId").val(data.Id);
				$("#mainGroupName").html(data.GroupName);
                var modal = $("#groupAdditionModal");
                ShowModal(modal, '50%', '30%');
            }
        }
    }


    function ShowAddSubGroupModal() {
        var row = GetSelectedRowInTree();
        if (row.length <= 0) {
            ShowInfoWindow("Для добавления подгруппы нужно выбрать строку из дерева c неосновной группой");
        } else {
            var data = GetDataFromRowInTree(row);
            if (data.GroupType != "3")
                ShowInfoWindow("Нужно выбрать неосновную группу из дерева");
            else {
	            var parentMainGroup = GetParentFromTree(row);
				var parentMainGroupData = GetDataFromRowInTree(parentMainGroup);
				$("#mainGroupId").val(parentMainGroupData.Id);
				$("#mainGroupName").html(parentMainGroupData.GroupName);

				var parentYear = GetParentFromTree(parentMainGroup);
				var parentYearData = GetDataFromRowInTree(parentYear);
				$("#tourYearId").val(parentYearData.Id);
				$("#tourYear").html(parentYearData.GroupName);

				$("#groupId").val(data.Id);
				$("#groupName").html(data.GroupName);
                var modal = $("#groupAdditionModal");
                ShowModal(modal, '50%', '30%');
            }
        }
    }


    function SaveGroup(isSubGroup) {
        kendo.ui.progress($('body'), true);
        var dto = {
            Id: null,
			RatingTourId: $('#tourYearId').val(),
            ParentGroupId: !isSubGroup ? null : $('#groupId').val(),
            GroupingAlgorithmId: $('#mainGroupId').val(),
            Name: $('#addGroupInput').val()
        };
        $.ajax({
            url: '@Url.Action("EditGroup", "Tour")',
            type: 'POST',
            data: dto,
			success: function (response) {
				Common.ShowMessage('Сохранение выполнено');
				$("#groupAdditionModal").data("kendoWindow").close();
				var parentId = isSubGroup ? dto.ParentGroupId : dto.GroupingAlgorithmId;
				ReloadTourCartTab(dto.RatingTourId, parentId, response.Id);
            },
            error: function (response) {
                Common.ShowError(response.responseText);
            },
            complete: function () {
                kendo.ui.progress($('body'), false);
            }
        });
    }


	function ReloadTourCartTab(tourId, parentGroupId, groupId) {
		window.location.replace('@Url.Action("TourCard", "Tour")' + "?tourId=" +
			tourId + "&parentGroupId=" + parentGroupId + "&groupId=" + groupId);
	}

</script>

@section styles {
    <style>
        .border {
            border: 1px solid #969696;
        }

        .height-constraint {
            max-height: 95%;
            max-height: 95vh;
        } 

        .flex-content {
            display: flex;
            height: 100%;
        }

        .flex-tree-list {
            margin: 10px;
            flex-grow: 1;
            flex-shrink: 1;
            flex-basis: auto;
            align-items: stretch;
        }

        .flex-list-buttons {
            margin: 10px;
        }

        button {
            width: 10rem;
            margin-bottom: 5px !important;
        }

        .tour p:hover {
            background: #eaeef7;
        }

        .tour p {
            padding: 5px;
        }

        .selected {
            background: #eaeef7;
        }

        .control-label {
            margin-bottom: 0px;
            font-weight: normal;
            vertical-align: sub;
        }
    </style>
}