@using System.Collections
@using KadOzenka.Web.Helpers
@model KadOzenka.Web.Models.Tour.PartialGroupingDictionaryModel

@Html.Hidden(string.IsNullOrEmpty(Model.ModelPrefix) ? nameof(Model.IsNewDictionary) : $"{Model.ModelPrefix}.{nameof(Model.IsNewDictionary)}", Model.IsNewDictionary)
<div class="form-group existing-reference" style="@(!Model.IsNewDictionary ? "" : "display: none")">
    <div class="col-sm-2">
        @Html.CustomLabelFor(m => m.DictionaryId, true)
    </div>
    <div class="col-sm-7">
        @Html.KendoDropDownListWithAutocompleteFor(m => m.DictionaryId, (IEnumerable) ViewData["References"], useAddTag: true, addFunction: "addButtonClick", modelPrefix: Model.ModelPrefix)
    </div>
    <div class="col-sm-3">
        <label>
            @(Html.Kendo().CheckBoxFor(m => m.DeleteOldValues).Label("").Name(string.IsNullOrEmpty(Model.ModelPrefix) ? nameof(Model.DeleteOldValues) : $"{Model.ModelPrefix}.{nameof(Model.DeleteOldValues)}"))
            Удалить старые данные
        </label>
    </div>
</div>
<div class="form-group new-reference" style="@(Model.IsNewDictionary ? "" : "display: none")">
    <div class="col-sm-2">
        @Html.CustomLabelFor(m => m.NewDictionaryName, true)
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-11">
                @Html.Kendo().TextBox().Name(string.IsNullOrEmpty(Model.ModelPrefix) ? nameof(Model.NewDictionaryName) : $"{Model.ModelPrefix}.{nameof(Model.NewDictionaryName)}").Value(Model.NewDictionaryName)
            </div>
            <div class="col-sm-1">
                <a id="exist-ref" class="k-button k-button-icon" style="float: right"><span class='fas fa-history'></span></a>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var idPrefix = '@(!string.IsNullOrEmpty(Model.ModelPrefix) ? $"{Model.ModelPrefix}_" : string.Empty)';

    function addButtonClick() {
        $('.existing-reference').hide(500);
        $('.new-reference').show(500);
        $(`#${idPrefix}@(nameof(Model.IsNewDictionary))`).val(true);
    }
    function updateReferenceControl(id) {
        $('#exist-ref').click();
	    $(`#${idPrefix}@(nameof(Model.DictionaryId))`).data('kendoDropDownList').dataSource.add({ Text: $(`#${idPrefix}@(nameof(Model.NewDictionaryName))`).val(), Value: id });
	    $(`#${idPrefix}@(nameof(Model.DictionaryId))`).data('kendoDropDownList').refresh();
	    $(`#${idPrefix}@(nameof(Model.DictionaryId))`).data('kendoDropDownList').value(id);
	    $(`#${idPrefix}@(nameof(Model.NewDictionaryName))`).val("");
	}

    $(document).ready(function () {
        $('#exist-ref').on('click',
            function () {
                $('.new-reference').hide(500);
                $('.existing-reference').show(500);
				$(`#${idPrefix}@(nameof(Model.IsNewDictionary))`).val(false);
			});
    });
</script>