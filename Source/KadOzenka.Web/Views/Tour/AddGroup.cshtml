@using ObjectModel.Directory
@model KadOzenka.Web.Models.Tour.EstimateGroup.AddGroupViewModel

@using (Html.BeginForm("AddGroup", "Tour", FormMethod.Post))
{
	@Html.HiddenFor(m => m.TourId)
	@Html.HiddenFor(m => m.Id)

	<div class="form-horizontal col-sm-12">
		<div class="form-group"></div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Тип объекта недвижимости")
			</div>
			<div class="col-sm-10">
				@(Html.Kendo()
							.DropDownListFor(m => m.ObjectType)
							.DataTextField("Text")
							.DataValueField("Value")
							.BindTo(ComboBoxHelper.GetSelectList(typeof(PropertyTypes), new long[] { 4, 5, 6, 7, 8, 9, 10, 11, 12, 802 }))
							.HtmlAttributes(new { @style = "width: 100%" })
				)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Код")
			</div>
			<div class="col-sm-10">
				@Html.Kendo().TextBoxFor(m => m.Code)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Группа")
			</div>
			<div class="col-sm-10">
				@Html.Kendo().TextBoxFor(m => m.Group)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-6">
				@Html.Kendo().CheckBox().Name("ByTypeRom").Checked(Model.IsByTypeRoom).Label("По типу жилого помещения")
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Тип помещения")
			</div>
			<div class="col-sm-10">
				@(Html.Kendo().DropDownListFor(m => m.TypeOfRoom)
									.DataTextField("Text")
									.DataValueField("Value")
									.BindTo(ComboBoxHelper.GetSelectList(typeof(KoTypeOfRoom)))
									.HtmlAttributes(new { @style = "width: 100%" }).Enable(Model.IsByTypeRoom)
				)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-12">
				<button style="float: right" id="save" class="k-button" type="button">Сохранить</button>
			</div>
		</div>
	</div>
}


<script src="~/js/custom-validation.js"></script>
<script type="text/javascript">
	$(function() {
		$('#ByTypeRom').on('change', function () {
			if ($('#ByTypeRom:checked').length > 0) {
				$('#@nameof(Model.TypeOfRoom)').data("kendoDropDownList").enable(true);
			} else {
				$('#@nameof(Model.TypeOfRoom)').data("kendoDropDownList").enable(false);
			}
		});

		$('#save').on('click',
			function() {
				var form = $('form');
				var formObject = Common.Functions.FormToObject(form);
				kendo.ui.progress($('body'), true);

				formObject['IsByTypeRoom'] = $('#ByTypeRom').prop('checked');
				$.post(form.attr('action'), formObject).done(function(response) {
					kendo.ui.progress($('body'), false);
					if (response.Errors) {
						var errors = getErrors(response.Errors);
						Common.ShowError(errors);
						return;
					}
					if (response.message && response.id) {
						$('#@Html.IdFor(m => m.Id)').val(response.id);
						Common.ShowMessage(response.message);
					}
				}).fail(function (response, textStatus, errorThrown) {
					Common.ShowError(response.responseText);
				}).always(function () {
					kendo.ui.progress($('body'), false);
				});;
			});
	});
</script>