@model KadOzenka.Web.Models.Tour.GroupingDictionaryModel

<link rel="stylesheet" href="~/css/toolbars.css"/>

@using (Html.BeginForm("GroupingDictionaryCard", "Tour", FormMethod.Post))
{
    <div id="toolbar" class="top-toolbar"></div>
    <div class="bottom-main-content">
        @Html.HiddenFor(m => m.Id)
        <div class="form-horizontal col-sm-12">
            <div class="form-group"></div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.Name)
                </div>
                <div class="col-sm-10">
                    @Html.KendoTextBoxFor(m => m.Name, isReadonly: false)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.ValueType)
                </div>
                <div class="col-sm-10">
                    @Html.KendoEnumDropDownListFor(m => m.ValueType, isReadonly: !Model.ValueTypeCanBeChanged, withoutNull: true)
                </div>
            </div>
        </div>
    </div>
}

@if (Model.Id != -1 && Model.ShowItems)
{
<div style="height: calc(100% - 60px);">
    <div id="reference-items-ajax-loader" class="ajax-data-loading" data-request-type="GET" 
         data-url="@Url.Content("~/RegistersView/GroupingDictionaryValues?Transition=1&27100200=" + Model.Id)"
         data-param-DictionaryId="@Model.Id" data-param-Pageable="true" data-param-Scrollable="true"
         data-param-partialview="true" data-loader="true" style="height: 100%;"></div>
</div>
}

<style>
    #sidePanel-271  {
        min-height: 440px;
    }
    .contentPanel {
        height: auto;
    }
</style>



<script src="~/js/custom-validation.js"></script>
<script type="text/javascript">
    var grid;
    $(document).ready(function () {
        let saveEnabled = "@(Model.IsEdit)" === "True";
        $("#toolbar").kendoToolBar({
            items: [
                {
                    type: 'button',
                    id: 'save',
                    text: 'Сохранить',
                    enable: saveEnabled
                }]
        });

        //обновление грида, если в нем были изменения (добавили/удалили значение словаря)
        var registerId = $('#Grid-271').val();
        if (!registerId) {
            var observer = new MutationObserver(function (mutationsList, observer) {
                for (let mutation of mutationsList) {
                    if (mutation.type === 'childList') {
                        if (mutation.removedNodes && mutation.removedNodes.length == 1 && mutation.removedNodes.item(0)
                            && mutation.removedNodes.item(0).classList && mutation.removedNodes.item(0).classList.contains('k-window')
                        ) {
                            window.location.reload();
                        }
                    }
                }
            });
            observer.observe(document.getElementsByTagName('body')[0], { childList: true, subtree: true });
        }
       
        $('#save').on('click', saveDictionary);
    });


    function dataBound(e) {
        var itemCount = e.sender.dataSource.total();
        if (itemCount == 0) {
            $('#@(nameof(Model.ValueType))').data('kendoDropDownList').enable(true);
        } else {
            $('#@(nameof(Model.ValueType))').data('kendoDropDownList').readonly();
        }
    }


    function saveDictionary() {
        kendo.ui.progress($('body'), true);
        var form = $('form');
        var formObject = Common.Functions.FormToObject(form);
        $.post(form.attr('action'), formObject).done(function (response) {
            if (response.Errors) {
                var errors = getErrors(response.Errors);
                Common.ShowError(errors);
                return;
            }
            if (response.Success && response.Id) {
                $('#@Html.IdFor(m => m.Id)').val(response.Id);
                Common.ShowMessage(response.Success);
                if ('@Model.ShowItems' !== "True")
                    closeMainWindow();
            }
        }).fail(function (response, textStatus, errorThrown) {
            Common.ShowError(response.responseText);
        }).always(function () {
            kendo.ui.progress($('body'), false);
        });
    }

    function closeMainWindow() {
        setTimeout(function () {
            window.parent.parent.location.reload();
        }, 1000);
    }
</script>