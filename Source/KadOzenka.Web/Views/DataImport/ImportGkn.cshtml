@model KadOzenka.Web.Models.Task.TaskModel

<div id="toolbar"></div>
<div>
    <ul id="ls_panelbar" class="panelbar">
        <li id="MainData" data-expand>
            <span>Основные данные</span>
            <div>
                <div class="form-horizontal col-sm-12" style="margin-top:10px;">
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.CustomLabelFor(x => x.TourYear)
                        </div>
                        <div class="col-sm-9">
                            <input id="Tour" name="Tour" editmode="true" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.CustomLabelFor(x => x.IncomingDocumentRegNumber)
                        </div>
                        <div class="col-sm-9">
                            @Html.KendoTextBoxFor(x => x.IncomingDocumentRegNumber, isReadonly: false)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.CustomLabelFor(m => m.IncomingDocumentDate)
                        </div>
                        <div class="col-sm-9">
                            @Html.KendoDatePickerFor(x => x.IncomingDocumentDate, isReadonly: false)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.CustomLabelFor(m => m.NoteType)
                        </div>
                        <div class="col-sm-9">
                            @Html.KendoEnumDropDownListFor(x => x.NoteType, isReadonly: false)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.CustomLabelFor(m => m.EstimationDate)
                        </div>
                        <div class="col-sm-9">
                            @Html.KendoDatePickerFor(m => m.EstimationDate, format: "dd.MM.yyyy", isReadonly: false)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3">
                            @Html.CustomLabelFor(m => m.IncomingDocumentDescription)
                        </div>
                        <div class="col-sm-9">
                            @Html.TextBoxAreaFor(x => x.IncomingDocumentDescription, rowCount: 3, colCount: 3)
                        </div>
                    </div>
                </div>
            </div>
        </li>
        <li id="XmlFiles" data-expand>
            <span>XML-файлы</span>
            <div>
                <div class="form-horizontal col-sm-12">
                    <form id="fileForm">
                        <input name="files" id="files" type="file" aria-label="files" />
                    </form>
                </div>
            </div>
        </li>
    </ul> 
</div>

<script>
    $(document).ready(function () {

        var panelbar = $('#ls_panelbar').kendoPanelBar().data('kendoPanelBar');
        panelbar.expand('li[data-expand]');        

        var toolbar = $("#toolbar").kendoToolBar({
            items: [
                {
                    type: 'button',
                    id: 'check',
                    text: 'Сохранить',
                    click: function () {
                        var message = [];
                        
                        if ($('[name="IncomingDocumentRegNumber"]').val() == 0) {
                            message += 'Необходимо заполнить номер документа<br>';
                        }                        
                        if ($('[name="IncomingDocumentDate"]').data().kendoDatePicker.value() == null) {
                            message += 'Необходимо заполнить дату документа<br>';
                        }
                        if ($('[name="NoteType"]').val() == 0) {
                            message += 'Необходимо заполнить тип статьи<br>';
                        }
                        if (message.length != 0) {
                            Common.ShowError(message);
                            return;
                        }

                        var formData = new FormData($('#fileForm').get(0));

                        formData.set('IncomingDocumentRegNumber', $('[name="IncomingDocumentRegNumber"]').val());
                        var date = $('[name="IncomingDocumentDate"]').data().kendoDatePicker.value();                       
                        formData.set('IncomingDocumentDate', date.toDateString());                       
                        formData.set('TourYear', $('[name="Tour"]').val());
                        formData.set('NoteType', $('[name="NoteType"]').val());                       
                        var estdate = $('[name="EstimationDate"]').data().kendoDatePicker.value();
                        if (estdate != null) {
                            formData.set('EstimationDate', estdate.toDateString());
                        }
                        formData.set('IncomingDocumentDescription', $('[name="IncomingDocumentDescription"]').val());

                        kendo.ui.progress($('body'), true);
                        $.ajax({
                            type: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (e) {
                                kendo.ui.progress($('body'), false);
                                Common.ShowMessage(e.Msg);
                                setTimeout(function () {
                                    Common.UI.CloseWindow('MainMenuWindow', window.parent);
                                }, 1000);
                            },
                            error: function (e) {
                                kendo.ui.progress($('body'), false);
                                var msg = e.responseText ? e.responseText : 'Ошибка загрузки. Обратитесь к администратору.'
                                Common.ShowError(msg);
                            }
                        });
                    },
                    icon: 'upload',
                    hidden: false
                }
            ]
        });             

        $('[name="Tour"]')
            .kendoDropDownList({
                dataTextField: 'Text',
                dataValueField: 'Value',
                dataSource:
                {
                    transport: {
                        read: {
                            url: '@Url.Action("GetRatingTours", "Tour")',
                            dataType: 'json'
                        }
                    }
                }
            });

        var files = $('#files').kendoUpload({
		    multiple: true,
		    localization: {
			    select: 'Выбрать файлы'
		    },		    
		    validation: {
			    allowedExtensions: ['.xml', '.zip']
		    },
		    error: function (e) {
			    if (e.XMLHttpRequest.responseText) {
				    Common.ShowError(e.XMLHttpRequest.responseText);
			    } else {
				    Common.ShowError("При загрузке выбранного файла возникла ошибка (подробно в журнале ошибок)");
			    }
		    }
	    }).data('kendoUpload');
    });
</script>