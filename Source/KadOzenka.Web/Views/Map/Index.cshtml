@model KadOzenka.Web.Models.MarketObject.MapObjectDto

@{
    ViewData["Title"] = "Рыночная оценка объектов недвижимости города Москвы";
}

<head>
    <meta charset="utf-8" />
</head>

<body>
    <div id="container" class="MapContainer">
        <div id="data" class="Data Hidden">
            <div id="dataContentController" class="DataContentController">
                <div class="switch">
                    <input class="cmn-toggle cmn-toggle-round" id="cbEditMode" type="checkbox">
                    <label for="cbEditMode" style="float: left;" title="Редактировать"></label>
                    <span class="lp-con-el" style="display: inline;">
                        <label class="switch-text" style="margin-left: 9px; font-weight:normal;">Редактировать</label>
                    </span>
                </div>
                <div class="Button blocked" style="width:fit-content; display:inline-block; margin:0px;">Сохранить</div>
            </div>
            <div id="dataContentContainer" class="DataContentContainer"></div>
        </div>
        <div id="map" class="Map"></div>
        <div id="wmsLoadWindowContainer" class="wmsLoadWindowContainer Hidden">
            <div id="wmsLoadWindow"></div>
        </div>
    </div>
</body>

@section scripts {
    <script src="~/MapScripts/commonFunctions.js" charset="utf-8"></script>
    <script src="~/MapScripts/eventListeners.js" charset="utf-8"></script>
    <script src="~/MapScripts/HTMLEditor.js" charset="utf-8"></script>
    <script src="~/MapScripts/requests.js" charset="utf-8"></script>
    <script src="~/MapScripts/config.js" charset="utf-8"></script>
    <script src="~/MapScripts/initializeMap.js" charset="utf-8"></script>
    <script src="~/MapScripts/widgets.js" charset="utf-8"></script>
    <script src="~/MapScripts/clustering.js" charset="utf-8"></script>
    <script src="~/MapScripts/wms.js" charset="utf-8"></script>

    <script type="text/javascript">
        var objectLatitude = @(Model.Latitude.HasValue ? Model.Latitude.ToString().Replace(',', '.') : "undefined");
        var objectLongitude = @(Model.Longitude.HasValue ? Model.Longitude.ToString().Replace(',', '.') : "undefined");
        const params = new window.URLSearchParams(window.location.search);
        if (objectLatitude && objectLongitude) {
            if (!params.has('center')) {
                params.set('center', [objectLatitude, objectLongitude]);
            }
            if (!params.has('zoom')) {
                params.set('zoom', MapWithDefinedObjectSettings.zoom);
            }
        }
        if (window.history.replaceState) {
            const newUrl = new URL(window.location.href);
            newUrl.search = params;
            window.history.replaceState({ path: newUrl.href }, '', newUrl.href);
        }
    </script>

    <script type="text/x-kendo-template" id="wmsLoadWindowTemplate">
        @await Html.PartialAsync("/Views/Map/_wmsLoadWindowContent.cshtml")
    </script>
}

@section styles {
    <link rel="stylesheet" href="~/MapStyles/style.css" />
    <link rel="stylesheet" href="~/MapStyles/elemens.css" />
    <link rel="stylesheet" href="~/MapStyles/custom.css" />
}
