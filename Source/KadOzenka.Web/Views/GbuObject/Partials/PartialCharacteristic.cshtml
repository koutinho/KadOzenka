@using Core.Register
@using KadOzenka.Web.Helpers
@model KadOzenka.Web.Models.GbuObject.PartialCharacteristicViewModel

@Html.HiddenFor(m => m.IsNewAttribute)
<div class="form-group existing-attribute-result" style="@(!Model.IsNewAttribute ? "" : "display: none")">
	<div class="col-sm-2">
		@Html.CustomLabelFor(m => m.IdAttributeResult, true)
	</div>
    <div class="col-sm-10">
        @if (!string.IsNullOrEmpty(Model.AttributeResultSourceNameField))
        {
            @Html.KendoDropDownListTreeWithButton(m => m.IdAttributeResult, (IEnumerable<DropDownTreeItemModel>)ViewData["TreeAttributes"], useAddTag: true, addFunction: "addButton", onSelectEvent: "onAttributeResultSelectEvent")
        }
        else
        {
            @Html.KendoDropDownListTreeWithButton(m => m.IdAttributeResult, (IEnumerable<DropDownTreeItemModel>)ViewData["TreeAttributes"], useAddTag: true, addFunction: "addButton")
        }
    </div>
</div>
<div class="form-group new-attribute-result" style="@(Model.IsNewAttribute ? "" : "display: none")">
	<div class="col-sm-2">
		@Html.CustomLabelFor(m => m.NameNewAttribute, true)
	</div>
	<div class="col-sm-10">
		<div class="row">
			<div class="col-sm-3">
				@Html.Kendo().TextBox().Name(nameof(Model.NameNewAttribute))
			</div>
			<div class="col-sm-1">
				@Html.CustomLabelFor(m => m.RegistryId, htmlAttributes: new { @style = "float: right" }, NotSetRequired: true)
			</div>
			<div class="col-sm-3">
				@(Html.Kendo().DropDownListFor(m => m.RegistryId)
					.DataTextField("Text")
					.DataValueField("Value")
					.DataSource(source =>
					{
						source.Read(read =>
						{
							read.Action("GetAllGbuRegisters", "GbuObject");
						});
					})
					.OptionLabel(null))
			</div>
			<div class="col-sm-1">
				@Html.CustomLabelFor(m => m.TypeNewAttribute, htmlAttributes: new { @style = "float: right"}, NotSetRequired: true)
			</div>
			<div class="col-sm-3" style="padding-right: 0">
				@(Html.Kendo()
					.DropDownListFor(m => m.TypeNewAttribute)
					.DataTextField("Text")
					.DataValueField("Value")
					.BindTo(ComboBoxHelper.GetSelectList(typeof(RegisterAttributeType)))
					.HtmlAttributes(new { @style = "width: 100%" })
					)
			</div>
			<div class="col-sm-1">
				<a id="exist-attr" class="k-button k-button-icon" style="float: right"><span class='fas fa-history'></span></a>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">

	function updateResultControl(id) {
		$('#exist-attr').click();
		var selectedRegisterText;

		var selectedRegisterValue = $('#@nameof(Model.RegistryId)').data('kendoDropDownList').value();

		selectedRegisterText = $('#@nameof(Model.RegistryId)').data('kendoDropDownList').dataSource.data().find(
			function(item) {
				return item.Value === selectedRegisterValue;
			}) || null;

		selectedRegisterText = !!selectedRegisterText ? selectedRegisterText.Text : null;

		var dataSource = $('#@nameof(Model.IdAttributeResult)').data('kendoDropDownTree').dataSource.data().map(function(item) {
			return {
				text: item.text,
				value: item.value,
				items: item.items.map(function(i) {
					return {
						text: i.text,
						value: i.value
					}

				})
			}
		});

		if (!!selectedRegisterText && !!dataSource) {
			dataSource.forEach(function(item) {
				if (item['text'] === selectedRegisterText) {
					item['items'].push({ text: $('#@nameof(Model.NameNewAttribute)').val(), value: id.toString() });
				}
			});
		}

		$('#@nameof(Model.IdAttributeResult)').data('kendoDropDownTree').dataSource.data(dataSource);
		$('#@nameof(Model.IdAttributeResult)').data('kendoDropDownTree').refresh();
        $('#@nameof(Model.IdAttributeResult)').data('kendoDropDownTree').value(id);
        $('#@nameof(Model.NameNewAttribute)').val("");
        if ($("#@(Model.AttributeResultSourceNameField)")) {
            $("#@(Model.AttributeResultSourceNameField)").val(selectedRegisterText);
        }
	}

	function addButton() {
		$('.existing-attribute-result').hide(500);
		$('.new-attribute-result').show(500);
		$('#@(nameof(Model.IsNewAttribute))').val(true);
	}
	$(document).ready(function() {
		$('#exist-attr').on('click',
			function () {
				$('.new-attribute-result').hide(500);
				$('.existing-attribute-result').show(500);
				$('#@(nameof(Model.IsNewAttribute))').val(false);
			});
    });

    function onAttributeResultSelectEvent() {
        if (!this.e.sender.dataItem(this.e.node).hasChildren) {
            var node = this.e.sender.dataItem(this.e.node);
            $("#@(Model.AttributeResultSourceNameField)").val(node.parentNode().text);
        }
	}
</script>