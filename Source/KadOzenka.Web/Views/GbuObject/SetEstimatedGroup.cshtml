@using KadOzenka.Dal.Enum
@using KadOzenka.Web.Controllers
@using KadOzenka.Web.Helpers
@using KadOzenka.Web.Models.GbuObject
@using ObjectModel.Directory.Common
@model EstimatedGroupViewModel

<link rel="stylesheet" href="~/css/toolbars.css"/>
@if (ViewContext.HttpContext.Request.Query["useMasterPage"] == "true")
{
    <link rel="stylesheet" href="~/css/toolbars-top-menu.css"/>
}

<style>
	.footer {
		position: fixed;
		width: 100%;
		bottom: 0;
	}
</style>


@using (Html.BeginForm("SetEstimatedGroup", "GbuObject", FormMethod.Post))
{
    <div id="estimatedGroupToolbar" class="top-toolbar k-toolbar k-widget k-toolbar-resizable">
            @* <button style="float: right" id="execute" class="k-button" type="button">Выполнить</button> *@
            @* *@
            @* <a class="k-button k-state-disabled" id="goToProcessBtn" href="" target="_blank" style="float: right"> *@
            @*     <span>Перейти к процессу</span> *@
            @* </a> *@
    </div>
     <div class="bottom-main-content">
        <div class="form-horizontal col-sm-12">
            @* @Html.RenderHelpButton() *@
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.IdTask)
                </div>
                <div class="col-sm-10">
                    @(Html.Kendo().DropDownListFor(m => m.IdTask)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Filter("contains")
                        .OptionLabel(new SelectListItem {Value = null, Text = " "})
                        .DataSource(source =>
                        {
                            source.Read(read => { read.Action("GetTasksData", "GbuObject"); })
                                .ServerFiltering(false);
                        }))
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m=>m.OverwriteGroups)
                </div>
                <div class="col-sm-10">
                    @Html.Kendo().CheckBoxFor(m=>m.OverwriteGroups).Label("")
                </div>
            </div>

        </div>
    </div>
}

<script src="~/js/toolbars.js"></script>
<script src="/js/custom-validation.js"></script>
<script type="text/javascript">
	function fillForm(data) {
		data.forEach(function (val) {
            var elementName = Object.keys(val)[0];
            var elementValue = val[elementName];

			if ($('#' + Object.keys(val)[0]).data('kendoDropDownTree')) {
				$('#' + Object.keys(val)[0]).data('kendoDropDownTree').value(val[Object.keys(val)[0]] || '');
				$('#' + Object.keys(val)[0]).data('kendoDropDownTree').trigger('change');
                $('#' + Object.keys(val)[0]).data('kendoDropDownTree').filterInput.val('');
                $('#' + Object.keys(val)[0]).data('kendoDropDownTree').trigger('filtering', [true]);
            }
            if (Object.keys(val)[0].includes('IsOksObjType')) {
                if (val[Object.keys(val)[0]]) {
                    $('#IsOksObjType_True').prop("checked", true);
                    $('#IsOksObjType_False').prop("checked", false);
                } else {
                    $('#IsOksObjType_True').prop("checked", false);
                    $('#IsOksObjType_False').prop("checked", true);
                }
		    }
            if (Object.keys(val)[0].includes('IdTask')) {
                $('#' + Object.keys(val)[0]).data('kendoDropDownList').value(val[Object.keys(val)[0]]);
            }
            if (elementName.includes('@(nameof(Model.ObjectChangeStatus))')) {
                var element = $('#@(nameof(Model.ObjectChangeStatus))').data("kendoMultiSelect");
                var currentValue = element.value();
                currentValue.push([elementValue]);
                element.value(currentValue);
            }
        });
	}

	$(document).ready(function() {
        $("#estimatedGroupToolbar").kendoToolBar({
            items: [
                {
                    type: 'button',
                    id: 'execute',
                    icon: 'check',
                    text: 'Выполнить'
                },
                {
                    type: 'button',
                    id: 'goToProcessBtn',
                    icon: 'arrow-right',
                    text: 'Перейти к процессу',
                    enable: false
                },
                helperButtonForToolbar()
            ]
        });

		$('#execute').on('click', function() {
			kendo.ui.progress($('body'), true);
			var form = $('form');
			var formObject = Common.Functions.FormToObject(form);
			$.post(form.attr('action'), formObject)
				.done(function (response) {
			        if (response.Errors) {
			            var errors = getErrors(response.Errors);
			            Common.ShowError(errors);
			            return;
			        }
			        if (response.Success) {
                        Common.ShowMessage("Операция успешно добавлена в очередь");
                        if (response.QueueId) {
                            var hrefForJournal = "/RegistersView/CoreLongProcessQueue?Transition=1&97500100=" + response.QueueId;
                            var goToProcessBtn = $("#goToProcessBtn");
                            goToProcessBtn.removeClass('k-state-disabled');
                            goToProcessBtn.attr('href', hrefForJournal);
                        }
			        }
				}).fail(function (response, textStatus, errorThrown) {
			        Common.ShowError(response.responseText);
			    }).always(function () {
				kendo.ui.progress($('body'), false);
			});
		});
    });
</script>