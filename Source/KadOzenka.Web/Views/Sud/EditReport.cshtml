@using KadOzenka.Dal.Enum
@using KadOzenka.Web.Helpers
@using Platform.Web.Models.CoreAttachment
@model KadOzenka.Web.Models.Sud.ReportModel


@section styles {
	<style>
		.k-checkbox-label[for="Claim"] {
			font-family: 'Roboto' !important;
			padding-top: 5px;
		}
		.hidden {
			display: none;
		}
		#ls_panelbar {
			width: 99% !important;
			border: none !important;
		}
	</style>
}
	@using (Html.BeginForm("EditReport", "Sud", FormMethod.Post, htmlAttributes: new { @id = "reportForm" }))
	{
		@Html.HiddenFor(m => m.Id)
		@Html.HiddenFor(m => m.Fio)
		@Html.HiddenFor(m => m.Org)
		@Html.HiddenFor(m => m.Sro)
	    <div class="form-horizontal col-sm-12">
            @Html.RenderHelpButton()
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor("Номер отчета", true)
                </div>
                <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Number, new {@class = "k-textbox", @style = "width: 100%;"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor("Дата отчета", true)
                </div>
                <div class="col-sm-4">
                    @Html.KendoDatePickerFor(m => m.ReportDate, false)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.Org)
                </div>
                <div class="col-sm-10">
                    <input id="IdOrg" name="IdOrg" value="@(Model.IdOrg)" editmode="true"/>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.Fio)
                </div>
                <div class="col-sm-10">
                    <input id="IdFio" name="IdFio" value="@(Model.IdFio)" editmode="true"/>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor("СРО", true)
                </div>
                <div class="col-sm-10">
                    <input id="IdSro" name="IdSro" value="@(Model.IdSro)" editmode="true"/>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-2">
                    @Html.CustomLabelFor(m => m.DateIn)
                </div>
                <div class="col-sm-4">
                    @Html.KendoDatePickerFor(m => m.DateIn, false)
                </div>
                <div class="col-sm-4">
                    @Html.KendoCheckBox("Жалоба в СРО", "Claim", Model.Claim, false)
                </div>
            </div>
            <div class="form-group">
                <div class="attachment-report @(Model.Id == -1 ? "hidden" : "")">
                    @await Html.PartialAsync("~/Views/CoreAttachment/AttachPartialGrid.cshtml",
                        new AttachmentPartialModel {ObjectId = (int) Model.Id, RegisterId = Model.RegisterId})
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12">
                    <button disabled="@(!Model.IsEditReport)" style="float: right" id="save" class="k-button" type="button">Сохранить</button>
                </div>
            </div>
        </div>
	}
<script type="text/javascript">
		$(document).ready(function () {
			$('#ls_panelbar').kendoPanelBar();

			var isEmptySro = "@(Model.IdSro == null)" === "True";
			var isEmptyFio = "@(Model.IdFio == null)" === "True";
			var isEmptyOrg = "@(Model.IdOrg == null)" === "True";
			console.log(isEmptySro, isEmptyFio, isEmptyOrg);

		$('#files').kendoUpload({
			multiple: false,
			localization: {
				select: 'Загрузить Файл'
			},
			async: {
				autoUpload: false
			},
			validation: {
				allowedExtensions: []
			}
		}).data('kendoUpload');

		$('#IdOrg').kendoDropDownList({
			filter: "contains",
			dataTextField: 'Name',
			dataValueField: 'Id',
			dataSource: {
				transport: {
					read: {
						url: '@Url.Action("GetDictionary", "Sud")',
						data: {
							type: @((int)OmDictionaryEnum.Org)
						},
						contentType: 'application/json; charset=utf-8',
						dataType: 'json'
					}
				}
			}
		});
			if (isEmptyOrg) {
				$("#IdOrg").data("kendoDropDownList").value(-1);
			}

			$('#IdFio').kendoDropDownList({
			filter: "contains",
			dataTextField: 'Name',
			dataValueField: 'Id',
			dataSource: {
				transport: {
					read: {
						url: '@Url.Action("GetDictionary", "Sud")',
						data: {
							type: @((int)OmDictionaryEnum.Fio)
						},
						contentType: 'application/json; charset=utf-8',
						dataType: 'json'
					}
				}
			}
			});
			if (isEmptyFio) {
				$("#IdFio").data("kendoDropDownList").value(-1);
			}

		$('#IdSro').kendoDropDownList({
			filter: "contains",
			dataTextField: 'Name',
			dataValueField: 'Id',
			dataSource: {
				transport: {
					read: {
						url: '@Url.Action("GetDictionary", "Sud")',
						data: {
							type: @((int)OmDictionaryEnum.Sro)
						},
						contentType: 'application/json; charset=utf-8',
						dataType: 'json'
					}
				}
			}
		});
			if (isEmptySro)
			{
				$("#IdSro").data("kendoDropDownList").value(-1);
			}
	});

	function distinctErrors(errors) {
		var result = [];
		$.each(errors, function(index, event) {
			var events = $.grep(result, function (e) {
				return event.Message === e.Message;
			});
			if (events.length === 0) {
				result.push(event);
			}
		});

		return result;
	}

	$('#save').on('click',
		function() {
			var form = $('form');
			var formObject = Common.Functions.FormToObject(form);

			formObject.Fio = $("#IdFio").data("kendoDropDownList").text();
			formObject.Sro = $("#IdSro").data("kendoDropDownList").text();
			formObject.Org = $("#IdOrg").data("kendoDropDownList").text();

			console.log('formObject', formObject);

			kendo.ui.progress($('body'), true);

			$.post(form.attr('action'), formObject).done(function (response) {
				kendo.ui.progress($('body'), false);
				if (response.Errors) {
					var errors = $.map(distinctErrors(response.Errors),
						function(el) {
							return el.Message;
						});
					Common.ShowError(errors);
					return;
				}

				if (response.Success && response.data) {
					var oldId = $('#@Html.IdFor(m => m.Id)').val();
					$('#@Html.IdFor(m => m.Id)').val(response.data.Id);
					$('.attachment-report').removeClass('hidden');

					//uploadData - объект из частичного представления AttachPartialGrid
					if (uploadData && oldId === '-1') {
						uploadData.setObjectId(response.data.Id);
						var grid = $('#AttachmentGrid').data('kendoGrid');
						var url = grid.dataSource.transport.options.read.url.replace('objectId=-1', `objectId=${response.data.Id}`);
						grid.dataSource.transport.options.read.url = url;
					}
					Common.ShowMessage(response.Success);
				}
			});
		});
</script>