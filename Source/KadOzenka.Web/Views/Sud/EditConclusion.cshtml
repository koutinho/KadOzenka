@using KadOzenka.Dal.Enum
@model KadOzenka.Web.Models.Sud.ConclusionModel


@section styles {
	<style>
		.k-checkbox-label {
			font-family: 'Roboto' !important;
			padding-top: 5px;
		}
	</style>
}
@using (Html.BeginForm("EditConclusion", "Sud", FormMethod.Post))
{
	@Html.HiddenFor(m => m.Id)
	@Html.HiddenFor(m => m.Fio)
	@Html.HiddenFor(m => m.Org)
	@Html.HiddenFor(m => m.Sro)
	<div class="form-horizontal col-sm-12">
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Номер заключения", true)
			</div>
			<div class="col-sm-10">
				@Html.TextBoxFor(m => m.Number, new { @class = "k-textbox", @style = "width: 100%;" })
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Дата составления", true)
			</div>
			<div class="col-sm-4">
				@Html.KendoDatePickerFor(m => m.CreateDate, false)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor(m => m.Org)
			</div>
			<div class="col-sm-10">
				<input id="IdOrg" name="IdOrg" value="@(Model.IdOrg)" editmode="true" />
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor(m => m.Fio)
			</div>
			<div class="col-sm-10">
				<input id="IdFio" name="IdFio" value="@(Model.IdFio)" editmode="true" />
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("СРО", true)
			</div>
			<div class="col-sm-10">
				<input id="IdSro" name="IdSro" value="@(Model.IdSro)" editmode="true" />
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor(m => m.RecDate)
			</div>
			<div class="col-sm-4">
				@Html.KendoDatePickerFor(m => m.RecDate, false)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor(m => m.RecUser)
			</div>
			<div class="col-sm-10">
				@Html.TextBoxFor(m => m.RecUser, new { @class = "k-textbox", @style = "width: 100%;" })
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor(m => m.RecLetter)
			</div>
			<div class="col-sm-10">
				@Html.TextBoxFor(m => m.RecLetter, new { @class = "k-textbox", @style = "width: 100%;" })
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-2">
				@Html.CustomLabelFor("Файл документа")
			</div>
			<div class="col-sm-10">
				<input name="files" id="files" type="file" aria-label="files" accept="*" />
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-10 col-sm-offset-2">
				@Html.KendoCheckBox("Предварительная рецензия", "RecAfter", Model.RecAfter, false)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-10 col-sm-offset-2">
				@Html.KendoCheckBox("Рецензия после анализа", "RecBefore", Model.RecBefore, false)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-10 col-sm-offset-2">
				@Html.KendoCheckBox("Рассмотрено с Ковалевым Д.В", "RecSoglas", Model.RecSoglas, false)
			</div>
		</div>
		<div class="form-group">
			<div class="col-sm-12">
				<button style="float: right" id="save" class="k-button" type="button">Утвердить</button>
			</div>
		</div>
	</div>
}
<script type="text/javascript">
		$(document).ready(function () {
			var isEmptySro = "@(Model.IdSro == null)" === "True";
			var isEmptyFio = "@(Model.IdFio == null)" === "True";
			var isEmptyOrg = "@(Model.IdOrg == null)" === "True";
			console.log(isEmptySro, isEmptyFio, isEmptyOrg);

		$('#files').kendoUpload({
			multiple: false,
			localization: {
				select: 'Загрузить Файл'
			},
			async: {
				autoUpload: false
			},
			validation: {
				allowedExtensions: []
			}
		}).data('kendoUpload');

		$('#IdOrg').kendoDropDownList({
			filter: "contains",
			dataTextField: 'Name',
			dataValueField: 'Id',
			dataSource: {
				transport: {
					read: {
						url: '@Url.Action("GetDictionary", "Sud")',
						data: {
							type: @((int)OmDictionaryEnum.Org)
						},
						contentType: 'application/json; charset=utf-8',
						dataType: 'json'
					}
				}
			},
			dataBound: function () {
				if (isEmptyOrg) {
					$("#IdOrg").data("kendoDropDownList").value(-1);
				}
			}
		});

		$('#IdFio').kendoDropDownList({
			filter: "contains",
			dataTextField: 'Name',
			dataValueField: 'Id',
			dataSource: {
				transport: {
					read: {
						url: '@Url.Action("GetDictionary", "Sud")',
						data: {
							type: @((int)OmDictionaryEnum.Fio)
						},
						contentType: 'application/json; charset=utf-8',
						dataType: 'json'
					}
				}
			},
			dataBound: function () {
				if (isEmptyFio) {
					$("#IdFio").data("kendoDropDownList").value(-1);
				}
			}
		});

		$('#IdSro').kendoDropDownList({
			filter: "contains",
			dataTextField: 'Name',
			dataValueField: 'Id',
			dataSource: {
				transport: {
					read: {
						url: '@Url.Action("GetDictionary", "Sud")',
						data: {
							type: @((int)OmDictionaryEnum.Sro)
						},
						contentType: 'application/json; charset=utf-8',
						dataType: 'json'
					}
				}
			},
			dataBound: function () {
				if (isEmptySro)
				{
					$("#IdSro").data("kendoDropDownList").value(-1);
				}
			}
		});
	});

	function distinctErrors(errors) {
		var result = [];
		$.each(errors, function(index, event) {
			var events = $.grep(result, function (e) {
				return event.Message === e.Message;
			});
			if (events.length === 0) {
				result.push(event);
			}
		});

		return result;
	}

	$('#save').on('click',
		function() {
			var form = $('form');
			var formObject = Common.Functions.FormToObject(form);

			formObject.Fio = $("#IdFio").data("kendoDropDownList").text();
			formObject.Sro = $("#IdSro").data("kendoDropDownList").text();
			formObject.Org = $("#IdOrg").data("kendoDropDownList").text();

			console.log('formObject', formObject);

			kendo.ui.progress($('body'), true);

			$.post(form.attr('action'), formObject).done(function (response) {
				kendo.ui.progress($('body'), false);
				if (response.Errors) {
					var errors = $.map(distinctErrors(response.Errors),
						function(el) {
							return el.Message;
						});
					Common.ShowError(errors);
					return;
				}

				if (response.Success && response.data) {
					$('#@Html.IdFor(m => m.Id)').val(response.data.Id);
					Common.ShowMessage(response.Success);
				}
			});
		});
</script>