@using ObjectModel.Insur;

<ul id="ls_panelbar" class="panelbar">
    <li id="SingleLinkMkd">
        <span>Для МКД, связанного с ЕГРН, найден МКД, связанный с БТИ</span>
        <div>
            <div class="form-horizontal col-sm-12">
                <div class="form-group"></div>
                <div class="form-group">
                    <div class="col-sm-12">
                        <div id="SingleLinkMkdGrid">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </li>
</ul>

<script>
    function deleteSingleRows() {
        Common.ClearNotification();
        kendo.ui.progress($('body'), true);
        var dataSource = $('#SingleLinkMkdGrid').data('kendoGrid').dataSource;
        var data = dataSource.data();
        var arrayUid = [];
        for (var i = 0; i < data.length; ++i) {
            var row = $('#SingleLinkMkdGrid').data('kendoGrid').tbody.find("tr[data-uid=" + data[i].uid + "]");
            var cheked = row.find('.k-checkbox').is(':checked');
            if (cheked) {
                arrayUid.push(data[i].uid);
            }
        }
        for (var i = 0; i < data.length; ++i) {
            if (arrayUid.includes(data[i].uid)) {
                dataSource.remove(data[i]);
                i--;
            }
        }
        kendo.ui.progress($('body'), false);
    };

    function linkMKDSingle() {
        Common.ClearNotification();
        Common.UI.ShowConfirm({
            title: 'Подтверждение',
            content: 'вы точно хотите связать МКД?',
            onSuccess: function (e) {
                var grid = $('#SingleLinkMkdGrid').data('kendoGrid');
                var dataSource = grid.dataSource;
                var data = dataSource.data();
                var arrayIds = [];
                for (var i = 0; i < data.length; i += 2) {
                    var row = grid.tbody.find("tr[data-uid=" + data[i].uid + "]");
                    var cheked = row.find('.k-checkbox').is(':checked');
                    if (cheked) {
                        arrayIds.push({ FiasId: data[i].EmpId, BtiId: data[i + 1].EmpId });
                    }
                }
                
                kendo.ui.progress($('body'), true);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("LinkMKDArraySave", "Tenements")',
                    data: { 'arrayIds': arrayIds },
                    success: function () {
                        grid.refresh();
                        kendo.ui.progress($('body'), false);
                    },
                    error: function (response) {
                        Common.ShowError(response.responseText);
                        kendo.ui.progress($('body'), false);
                    }
                });
            }
        });
    }

    function historyMKD() {
        Common.ClearNotification();
        var grid = $('#SingleLinkMkdGrid').data('kendoGrid');
        if (grid) {
            var selected = grid.dataItem(grid.select());
            if (selected) {
                Common.UI.ShowWindow('История изменений', '@Url.Action("Index", "RegistersView")' +
                    '?registerId=InsurChangesLog&Transition=1&qs=352000200equal%27' + selected.EmpId + '%27and352000300equal%27' + '@OMBuilding.GetRegisterId()' + '%27');
            }
        }
    }

    $(function () {
        var panelbar = $('#ls_panelbar').kendoPanelBar().data('kendoPanelBar');
        panelbar.expand('li');

        var dataSourceSingleLinkMkd = new kendo.data.DataSource({
            transport: {
                read: {
                    url: '@Url.Action("SingelLinkBtiFiasMkdRead", "Tenements")',
                    contentType: 'application/json; charset=utf-8',
                    data: { list: '@ViewBag.SelectList' },
                    dataType: 'json'
                },
                parameterMap: function (options, operation) {
                    var parameters = { list: options.list };
                    if (operation !== "read" && options.models) {
                        parameters.models = kendo.stringify(options.models);
                    }
                    return parameters;
                }
            },
            requestStart: function () {
                kendo.ui.progress($('body'), true);
            },
            requestEnd: function () {
                kendo.ui.progress($('body'), false);
            },
            batch: true,
            schema: {
                model: {
                    id: "EmpId",
                    fields: {
                        EmpId: { editable: false, defaultValue: -1 },
                        Unom: { editable: false, type: "number", defaultValue: null },
                        CadastralNumber: { editable: false, type: "string" },
                        OkrugId: { editable: false, type: "number", defaultValue: null },
                        OkrugShortName: { editable: false, type: "string", defaultValue: null },
                        DistrictId: { editable: false, type: "number", defaultValue: null },
                        DistrictShortName: { editable: false, type: "string", defaultValue: null },
                        AddressId: { editable: false, type: "number", defaultValue: null },
                        AddressFullName: { editable: false, type: "string", defaultValue: null },
                        ConstructionYear: { editable: false, type: 'number', defaultValue: null },
                        ApartmentsCount: { editable: false, type: 'number', defaultValue: null },
                        TotalArea: { editable: false, type: "number", defaultValue: null },
                        GroupName: { editable: false, type: "string", defaultValue: null }
                    }
                }
            }
        });

        dataSourceSingleLinkMkd.group([
            { field: 'GroupName' },
        ]);

        $('#SingleLinkMkdGrid').kendoGrid({
            dataSource: dataSourceSingleLinkMkd,
            toolbar: [
                {
                    template: "<input type='button' class='k-button' value='Связать МКД и ЖП' onclick='linkMKDSingle()' />"
                },
                {
                    template: "<input type='button' class='k-button' value='Убрать отмеченные' onclick='deleteSingleRows()' />"
                },
                {
                    template: "<input type='button' class='k-button' value='История изменений' onclick='historyMKD()' />"
                }
            ],
            columns: [
                { field: 'EmpId', hidden: true, title: 'EmpId' },
                {
                    field: "GroupName",
                    hidden: true,
                    groupHeaderTemplate: " "
                },
                { selectable: true, width: "3%" },
                {
                    field: 'Unom',
                    title: 'UNOM',
                    template: '#: data.Unom != null ? data.Unom : ""#',
                    width: "5%"
                },
                {
                    field: 'CadastralNumber',
                    title: 'Кадастровый номер',
                    template: '#: data.CadastralNumber != null ? data.CadastralNumber : ""#',
                    width: "10%"
                },
                { field: 'OkrugId', hidden: true, title: 'Id' },
                {
                    field: 'OkrugShortName',
                    title: 'Округ',
                    template: '#: data.OkrugShortName != null ? data.OkrugShortName : ""#',
                    width: "15%"
                },
                { field: 'DistrictId', hidden: true, title: 'Id' },
                {
                    field: 'DistrictShortName',
                    title: 'Район',
                    template: '#: data.DistrictShortName != null ? data.DistrictShortName : ""#',
                    width: "15%"
                },
                { field: 'AddressId', hidden: true, title: 'Id' },
                {
                    field: 'AddressFullName',
                    title: 'Адрес',
                    template: '#: data.AddressFullName != null ? data.AddressFullName : ""#',
                    width: "37%"
                },
                {
                    field: 'ConstructionYear',
                    title: 'Год постройки',
                    template: Common.UI.CustomTemplate('ConstructionYear', '#: ConstructionYear ? kendo.toString(ConstructionYear, "\\#.\\#\\#\\#\\#\\#\\#") : ""#'),
                    width: "5%"
                },
                {
                    field: 'ApartmentsCount',
                    title: 'Количество квартир в доме',
                    template: Common.UI.CustomTemplate('ApartmentsCount', '#: ApartmentsCount ? kendo.toString(ApartmentsCount, "\\#.\\#\\#\\#\\#\\#\\#") : ""#'),
                    width: "5%"
                },
                {
                    field: 'TotalArea',
                    title: 'Общая площадь',
                    template: Common.UI.CustomTemplate('TotalArea', '#: TotalArea ? kendo.toString(TotalArea,  "\\#.\\#\\#\\#\\#\\#\\#") : ""#'),
                    attributes: { style: 'text-align: right' },
                    width: "5%"
                }
            ],
            height: 600,
            editable: { confirmation: true },
            resizable: true
        });
    });
</script>

<style>
    #ls_panelbar {
        width: 98% !important;
    }
</style>