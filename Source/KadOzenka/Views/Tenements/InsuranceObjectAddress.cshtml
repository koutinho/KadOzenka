@using CIPJS.Models.Tenements
@model InsuranceObjectsDto

@Html.HiddenFor(x => x.Address.Id)
<div class="form-group">
    <div class="col-sm-2">
        @Html.CustomLabelFor(x => x.Address.Region)
    </div>
    <div class="col-sm-4">
        <input id="address_region" style="width: 100%" readonly="readonly" />
        @Html.HiddenFor(x => x.Address.Region)
    </div>
    <div class="col-sm-2">
        @Html.CustomLabelFor(x => x.Address.PostalCode)
    </div>
    <div class="col-sm-4">
        @Html.KendoTextBoxFor(x => x.Address.PostalCode)
    </div>
    @*<div class="col-sm-2">
            @Html.CustomLabelFor(x => x.Address.FIAS)
        </div>
        <div class="col-sm-4">
            @Html.KendoTextBoxFor(x => x.Address.FIAS)
        </div>*@
</div>
<div class="form-group">
    <div class="col-sm-2">
        @Html.CustomLabelFor(x => x.Address.City)
    </div>
    <div class="col-sm-4">
        <input id="address_city" style="width: 100%" readonly="readonly" editmode="true" />
        @Html.HiddenFor(x => x.Address.City)
    </div>
    <div class="col-sm-2">
        @Html.CustomLabelFor(x => x.Address.Locality)
    </div>
    <div class="col-sm-4">
        <input id="address_locality" style="width: 100%" readonly="readonly" editmode="true" />
        @Html.HiddenFor(x => x.Address.Locality)
    </div>
</div>
@if (Model.EmpId != -1 || Model.EmpId != 0)
{
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabelFor(x => x.Address.Street)
        </div>
        <div class="col-sm-4">
            <input id="address_street" style="width: 100%" readonly="readonly" editmode="true" />
            @Html.HiddenFor(x => x.Address.Street)
        </div>
        <div class="col-sm-2">
            <input id="address_type_house" style="width: 100%" readonly="readonly" editmode="true" />
            @Html.HiddenFor(x => x.Address.TypeHouse)
        </div>
        <div class="col-sm-4">
            @Html.KendoTextBoxFor(x => x.Address.House)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            @Html.CustomLabelFor(x => x.Address.Corpus)
        </div>
        <div class="col-sm-4">
            @Html.KendoTextBoxFor(x => x.Address.Corpus)
        </div>
        <div class="col-sm-2">
            @Html.CustomLabelFor(x => x.Address.Structure)
        </div>
        <div class="col-sm-4">
            @Html.KendoTextBoxFor(x => x.Address.Structure)
        </div>
    </div>
}
<div class="form-group">
    <div class="col-sm-2">
        @Html.CustomLabelFor(x => x.Address.FullName)
    </div>
    <div class="col-sm-10">
        @Html.KendoTextBoxFor(x => x.Address.FullName)
    </div>
</div>
<script>
    $(function () {
        var changedCity = false;
        var region = $('#address_region').kendoDropDownList({
            dataTextField: 'Name',
            dataValueField: 'Value',
            text: '@(Html.Raw(Model.Address?.Region))',
            dataBound: function () {
                this.text('@(Html.Raw(Model.Address?.Region))');
                if (this.dataItems().length > 0) {
                    this.select(0);
                    if (city) {
                        city.dataSource.read();
                    }
                    if (street) {
                        street.dataSource.read();
                    }
                    $('[name="Address.Region"]').val(this.text());
                }
            },
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetRegions", "AddressFias")',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json'
                    }
                }
            }
        }).data('kendoDropDownList');

        var city = $('#address_city').kendoDropDownList({
            autoBind: false,
            dataTextField: 'Name',
            dataValueField: 'Value',
            text: '@(Html.Raw(Model.Address?.City))',
            dataBound: function () {
                this.text('@(Html.Raw(Model.Address?.City))');
            },
            change: function () {
                if (!this.element.attr("readonly")) {
                    var value = this.value();

                    changedCity = true;
                    street.text('');
                    street.dataSource.read({ cityCode: value });
                    $('[name="Address.City"]').val(this.text());
                    setAddress();
                }
            },
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetCities", "AddressFias")',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json'
                    }
                }
            }
        }).data('kendoDropDownList');

         var locality = $('#address_locality').kendoDropDownList({
            autoBind: false,
            dataTextField: 'Name',
            dataValueField: 'Value',
            filter: 'contains',
            text: '@(Html.Raw(Model.Address?.Locality))',
            dataBound: function () {
                if (!changedCity) {
                    this.text('@(Html.Raw(Model.Address?.Locality))');
                }
            },
            change: function () {
                if (!this.element.attr("readonly")) {
                    $('[name="Address.Locality"]').val(this.text());
                    setAddress();
                }
            },
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetLocality", "AddressFias")',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json'
                    }
                }
            }
        }).data('kendoDropDownList');

        var type_house = $('#address_type_house').kendoDropDownList({
            autoBind: false,
            dataTextField: 'Name',
            dataValueField: 'Value',
            filter: 'contains',
            text: '@(Html.Raw(string.IsNullOrEmpty(Model.Address?.TypeHouse) ? "Дом" : Model.Address?.TypeHouse))',
            dataBound: function () {
                if (!changedCity) {
                    this.text('@(Html.Raw(Model.Address?.TypeHouse))');
                }
            },
            change: function () {
                if (!this.element.attr("readonly")) {
                    $('[name="Address.TypeHouse"]').val(this.text());
                    setAddress();
                }
            },
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetTypeHouse", "AddressFias")',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json'
                    }
                }
            }
        }).data('kendoDropDownList');

        // Если нет значения.
        if (@((string.IsNullOrEmpty(Model.Address ?.TypeHouse)).ToString().ToLower())) {
            $('[name="Address.TypeHouse"]').val('Дом');
        }

        var street = $('#address_street').kendoDropDownList({
            autoBind: false,
            dataTextField: 'Name',
            dataValueField: 'Value',
            filter: 'contains',
            text: '@(Html.Raw(Model.Address?.Street))',
            dataBound: function () {
                if (!changedCity) {
                    this.text('@(Html.Raw(Model.Address?.Street))');
                }
            },
            change: function () {
                if (!this.element.attr("readonly")) {
                    $('[name="Address.Street"]').val(this.text());
                    setAddress();
                }
            },
            dataSource: {
                transport: {
                    read: {
                        url: '@Url.Action("GetStreets", "AddressFias")',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json'
                    }
                }
            }
        }).data('kendoDropDownList');



        $('[name="Address.House"], [name="Address.Corpus"], [name="Address.Structure"], [name="Address.PostalCode"]').on('change', function () {
            setAddress();
        });

        function setAddress() {
            
            var addressFullName = [],
                index = $('[name="Address.PostalCode"]').val(),
                house = $('[name="Address.House"]').val(),
                corpus = $('[name="Address.Corpus"]').val(),
                structure = $('[name="Address.Structure"]').val();

            if (index && index.length > 0) addressFullName.push(index);
            addressFullName.push(region.text());
            if (city && city.text().length > 0) addressFullName.push(city.text());
            if (locality && locality.text().length > 0) addressFullName.push(locality.text());
            if (street && street.text().length > 0) addressFullName.push(street.text());

            if (house && house.length > 0) addressFullName.push(type_house.value() + house);
            if (corpus && corpus.length > 0) addressFullName.push('корп. ' + corpus);
            if (structure && structure.length > 0) addressFullName.push('стр. ' + structure);

            $('[name="Address.FullName"]').val(addressFullName.join(', '));
        }
    });
</script>