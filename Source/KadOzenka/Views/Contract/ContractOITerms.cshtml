@model CIPJS.Models.Contract.AllPropertyDetails

<div class="form-horizontal col-sm-12">
    <div class="form-group">
        <h5 class="text-center">
            <strong>
                Таблица "Условия договора страхования"
            </strong>
        </h5>
        <table id="contract-table">
            <thead>
                <tr>
                    <!--Добавили Id, чтобы не сравнивать с названием строки-->
                    <th data-field="id">Id</th>
                    <th data-field="name">Элемент конструкции</th>
                    <th data-field="costDog">Страховая стоимость (Договор)</th>
                    <th data-field="amountDog">Страховая сумма (Договор)</th>
                    <th data-field="premiumDog">Страховая премия (Договор)</th>
                    <th data-field="damageElement">Размер ущерба</th>
                    <th data-field="cityPart">Доля города</th>
                    <th data-field="skPart">Доля СК</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>0</td>
                    <td editmode="false" readonly="true">Конструктивные элементы и помещения общего пользования</td>
                    <td>@(decimal.Round(Model.St1.HasValue ? Model.St1.Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.Ss1.HasValue ? Model.Ss1.Value : 0, 2))</td>
                    <td></td>

                    <td>@(decimal.Round(Model.DamageElem1.HasValue ? Model.DamageElem1.Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.DamageElem1.HasValue ? (Model.DamageElem1.Value * 0.25M) : 0, 2))</td>
                    <td>@(decimal.Round(Model.DamageElem1.HasValue ? (Model.DamageElem1.Value * 0.75M) : 0, 2))</td>

                </tr>
                <tr>
                    <td>1</td>
                    <td>Внеквартирное инженерное оборудование</td>
                    <td>@(decimal.Round(Model.St2.HasValue ? Model.St2.Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.Ss2.HasValue ? Model.Ss2.Value : 0, 2))</td>
                    <td></td>

                    <td>@(decimal.Round(Model.DamageElem2.HasValue ? Model.DamageElem2.Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.DamageElem2.HasValue ? (Model.DamageElem2.Value * 0.25M) : 0, 2))</td>
                    <td>@(decimal.Round(Model.DamageElem2.HasValue ? (Model.DamageElem2.Value * 0.75M) : 0, 2))</td>
                </tr>
                <tr>
                    <td>2</td>
                    <td>Лифтовое оборудование</td>
                    <td>@(decimal.Round(Model.St3.HasValue ? Model.St3.Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.Ss3.HasValue ? Model.Ss3.Value : 0, 2))</td>
                    <td></td>

                    <td>@(decimal.Round(Model.DamageElem3.HasValue ? Model.DamageElem3.Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.DamageElem3.HasValue ? (Model.DamageElem3.Value * 0.25M) : 0, 2))</td>
                    <td>@(decimal.Round(Model.DamageElem3.HasValue ? (Model.DamageElem3.Value * 0.75M) : 0, 2))</td>
                </tr>
                <tr>
                    <td>3</td>
                    <td>По дому в целом</td>
                    <td>@(decimal.Round((Model.St1 + Model.St2 + Model.St3).HasValue ? (Model.St1 + Model.St2 + Model.St3).Value : 0, 2))</td>
                    <td>@(decimal.Round((Model.Ss1 + Model.Ss2 + Model.Ss3).HasValue ? (Model.Ss1 + Model.Ss2 + Model.Ss3).Value : 0, 2))</td>
                    <td>@(decimal.Round(Model.RasPripay.HasValue ? Model.RasPripay.Value : 0, 2))</td>

                    <td>@(decimal.Round((Model.DamageElem1 + Model.DamageElem2 + Model.DamageElem3).HasValue ? (Model.DamageElem1 + Model.DamageElem2 + Model.DamageElem3).Value : 0, 2))</td>
                    <td>@(decimal.Round((Model.DamageElem1 + Model.DamageElem2 + Model.DamageElem3).HasValue ? ((Model.DamageElem1 + Model.DamageElem2 + Model.DamageElem3).Value * 0.25M) : 0, 2))</td>
                    <td>@(decimal.Round((Model.DamageElem1 + Model.DamageElem2 + Model.DamageElem3).HasValue ? ((Model.DamageElem1 + Model.DamageElem2 + Model.DamageElem3).Value * 0.75M) : 0, 2))</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<script>
    $(function () {
        // Созданик грида.
        $('#contract-table').kendoGrid({
            columns: [{
                field: "id",
                title: "Id"
            }, {
                field: "name",
                title: "Элемент конструкции",
                editable: false,
                type: 'string',
                width: "30%"
            },
            {
                field: "costDog",
                title: "costDog",
                editable: false,
                type: 'number'
            },
            {
                field: "amountDog",
                title: "amountDog",
                editable: false,
                type: 'number'
            },
            {
                field: "premiumDog",
                title: "premiumDog",
                editable: false,
                type: 'number'
            },
            {
                field: "damageElement",
                title: "damageElement",
                type: 'number'
            },
            {
                field: "skPart",
                title: "skPart",
                type: 'number'
            },
            {
                field: "cityPart",
                title: "cityPart",
                type: 'number'
            }
            ],
            scrollable: false,
            resizable: true,
            editable: true,
            save: function (e) {
                debugger;
                // Если изменяется колонка damageElement.
                if (e.values.hasOwnProperty('damageElement') && e.model.id) {

                    var damageElement = e.values.damageElement;
                    var id = e.model.id;
                    if (damageElement < 0) {
                        e.preventDefault();
                        return;
                    }
                    // Если есть id строки и это строка не "по дому в целом".
                    if (id >= 0 && id < 3) {
                        // Получаем dataSource определенной строки.
                        var dataSource = e.sender.dataSource.at(id);
                        dataSource.set("damageElement", damageElement.toFixed(2));
                        dataSource.set("skPart", (damageElement * 0.25).toFixed(2));
                        dataSource.set("cityPart", (damageElement * 0.75).toFixed(2));
                        CalculateAllHomeRow(e);
                    }
                }
            },
            saveChanges: function (e) {
                Common.ClearNotification();
                var damageElem1 = e.sender.dataSource.at(0).damageElement;
                var damageElem2 = e.sender.dataSource.at(1).damageElement;
                var damageElem3 = e.sender.dataSource.at(2).damageElement;
                debugger;
                // Достаем ds строки "по дому в целом".
                var allHomeDs = e.sender.dataSource.at(3);
                // Проверяем значения.
                var damageElement = allHomeDs.damageElement;
                var cityPart = allHomeDs.cityPart;
                var damageElementBag = parseFloat(@ViewBag.SumDamage).toFixed(2);
                var cityPartBag = parseFloat(@ViewBag.StrahPlat).toFixed(2);
                var errorString = "";
                if (damageElementBag != damageElement) {
                    errorString += 'Табличное значение размера ущерба по дому не соответствует данным от СК!';
                }
                if (cityPart != cityPartBag) {
                    errorString += ' Табличное значение доля города по дому не соответствует данным от СК!';
                }
                if (errorString != "") {
                    notificationPanel.show({ message: errorString}, 'error');
                }
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("SaveDamageElemnts", "Contract")',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            PropertyId: @Model.Id,
                            DamageElem1: damageElem1,
                            DamageElem2: damageElem2,
                            DamageElem3: damageElem3
                        }),
                        dataType: 'json',
                        success: function (response) {
                            notificationPanel.show({ message: 'Таблица успешно сохранена.' }, 'success');

                        }, error: function (e) {
                            Common.ShowError('Возникла ошибка при сохранении таблицы.')
                        }
                    });

            },
            toolbar: [{ name: "save", text: "Сохранить таблицу" }]
        }).data("kendoGrid").hideColumn('id');
    });

    // Расчет строки "по дому в целом".
    var CalculateAllHomeRow = function (e) {
        var sumDamageElement = 0;
        // Расчитываем сумму значений остальных строк.
        for (var i = 0; i < 3; i++) {
            var ds = e.sender.dataSource.at(i);
            sumDamageElement += ds.damageElement;
        }
        // Достаем ds строки "по дому в целом".
        var allHomeDs = e.sender.dataSource.at(3);
        // Проставляем значения
        allHomeDs.set("damageElement", sumDamageElement.toFixed(2));
        allHomeDs.set("skPart", (sumDamageElement * 0.25).toFixed(2));
        allHomeDs.set("cityPart", (sumDamageElement * 0.75).toFixed(2));

        $("#contract-table").data("kendoGrid").refresh();
    }
</script>

