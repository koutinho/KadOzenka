@using CIPJS.DAL.Bank

@model BankDto

<form>
    @Html.HiddenFor(x => x.EmpId)
    <ul id="bank_panelbar" class="panelbar" style="width:86%">
        <li>
            <span id="COMON_DATA">Общие данные</span>
            <div>
                <div class="form-horizontal col-sm-12">
                    <div class="form-group"></div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            @Html.CustomLabelFor(x => x.BankName)
                        </div>
                        <div class="col-sm-4">
                            @Html.KendoTextBoxFor(x => x.BankName, isReadonly: false)
                        </div>
                        <div class="col-sm-2">
                            @Html.CustomLabelFor(x => x.DateInput)
                        </div>
                        <div class="col-sm-4">
                            @Html.KendoDatePickerFor(x => x.DateInput, isReadonly: false)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            @Html.CustomLabelFor(x => x.BankInn)
                        </div>
                        <div class="col-sm-4">
                            @Html.KendoTextBoxFor(x => x.BankInn, isReadonly: false)
                        </div>
                        <div class="col-sm-2">
                            @Html.CustomLabelFor(x => x.BankKpp)
                        </div>
                        <div class="col-sm-4">
                            @Html.KendoTextBoxFor(x => x.BankKpp, isReadonly: false)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                            @Html.CustomLabelFor(x => x.BankBic)
                        </div>
                        <div class="col-sm-4">
                            @Html.KendoTextBoxFor(x => x.BankBic, isReadonly: false)
                        </div>
                        <div class="col-sm-2">
                            @Html.CustomLabelFor(x => x.BankKorAcc)
                        </div>
                        <div class="col-sm-4">
                            @Html.KendoTextBoxFor(x => x.BankKorAcc, isReadonly: false)
                        </div>
                    </div>
                </div>
            </div>
        </li>
    </ul>
    <div class="static-nav">
        <a href="#COMON_DATA">Общие данные</a>
        <div id="bankToolbar" style="position:absolute; bottom: 20px; width: 95%;"></div>
    </div>
</form>
<script>
    $(function () {
        var panelbar = $('#bank_panelbar').kendoPanelBar().data('kendoPanelBar');

        panelbar.expand($('li'));

        kendo.ui.FilterMenu.fn.options.operators.string = {
            contains: 'равно'
        };

        function valid() {
            Common.ClearNotification();

            var messages = [],
                bankName = $('[name="BankName"]').val(),
                bankBic = $('[name="BankBic"]').val();

            if (!bankName || !bankName.length || bankName.length == 0) {
                messages.push('Поле "Название банка" обязательно для заполнения');
            }
            if (!bankBic || !bankBic.length || bankBic.length == 0) {
                messages.push('Поле "БИК" обязательно для заполнения');
            }

            if (messages.length > 0) {
                Common.ShowError(messages);
                return false;
            } else {
                return true;
            }
        }

        $('#bankToolbar').kendoToolBar({
            items: [
                {
                    type: 'button',
                    text: '',
                    icon: 'save',
                    id: 'save',
                    click: function () {
                        if (!valid()) return;

                        kendo.ui.progress($('body'), true);

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("BankCard", "Bank")',
                            data: $('form').serialize(),
                            success: function (e) {
                                if (e.Errors && e.Errors.length > 0) {
                                    Common.ShowError(e.Errors);
                                } else {
                                    Common.ShowMessage('Карточка успешно сохранена');
                                    KendoExtension.ToggleEditMode(false);
                                }

                                kendo.ui.progress($('body'), false);
                            }, error: function (e) {
                                Common.ShowError(e.responseText)
                                kendo.ui.progress($('body'), false);
                            }
                        });
                    }
                }
            ]
        }).data('kendoToolBar');

        $('.static-nav a').on('click', function (e) {
            e.preventDefault();
            var elementId = $(e.target).attr('href');
            if (elementId && $(elementId).offset()) {
                $('html,body').animate({ scrollTop: $(elementId).offset().top - 9 }, 500);
            }
        });
    });
</script>