<?xml version="1.0" encoding="utf-8"?>
<Report ScriptLanguage="CSharp" ReportInfo.Created="12/24/2019 10:00:00" ReportInfo.Modified="06/11/2020 13:13:59" ReportInfo.CreatorVersion="2017.4.7.0">
  <ScriptText>
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Windows.Forms;
    using System.Drawing;
    using System.Data;
    using FastReport;
    using FastReport.Data;
    using FastReport.Dialog;
    using FastReport.Barcode;
    using FastReport.Table;
    using FastReport.Utils;

namespace FastReport
{
  public class ReportScript
  {

    private void MatrixData_AfterData(object sender, EventArgs e)
    {
      // remove the AfterData method from the ResultTable object, if it had been assigned earlier
      MatrixData.ResultTable.AfterData -= MatrixDataResultTable_AfterData;
      // assign the AfterData method for the ResultTable object
      MatrixData.ResultTable.AfterData += MatrixDataResultTable_AfterData;
    }
    
    private void MatrixDataResultTable_AfterData(object sender, EventArgs e)
    {
      TableResult table = sender as TableResult;
      
      //fix table's column headers
      table[0, 0].RowSpan = 3;
      table[0, 0].ColSpan = 1;
      table[1, 0].RowSpan = 3;
      table[1, 0].ColSpan = 1;
      table[1, 0].Text = &quot;Значение&quot;;
      table[1, 0].SetStyle(table[0, 0]);
      
      //filling all propertyType cells
      for (int i = 2; i &lt; table.ColumnCount; i++)
      {
        if(table[i, 1].Text == &quot;&quot;){
          string propertyTypeText = table[i - 1, 1].Text;
          table[i, 1].Text = propertyTypeText;
        }    
      }
      
      //adding ObjectsCount col
      TableColumn newCol = new TableColumn();
      newCol.AutoSize = true;
      table.Columns.Insert(1, newCol);
      table[1, 0].SetStyle(table[0, 0]);
      table[1, 0].Text = &quot;Количество объектов недвижимости&quot;;
      table[1, 0].RowSpan = 3;
      for (int i = 3; i &lt; table.RowCount; i++)
      {
        if(table[0, i].RowSpan &gt; 1){
          DataSourceBase data = Report.GetDataSource(&quot;Data&quot;);
          data.Init();
          while (data.HasMoreRows)
          { 
            string groupName = Report.GetColumnValue(&quot;Data.GroupName&quot;).ToString();
            if(groupName == table[0, i].Text) {
              table[1, i].SetStyle(table[0, i]);
              table[1, i].Text =  Report.GetColumnValue(&quot;Data.ObjectsCount&quot;).ToString();
              table[1, i].RowSpan = 4;
            }
            data.Next();
          }
        }
      }
      
      for (int i = 3; i &lt; table.ColumnCount; i++)
      {
          DataSourceBase data = Report.GetDataSource(&quot;Data&quot;);
          data.Init();
          while (data.HasMoreRows)
          { 
            string propertyTypeName = Report.GetColumnValue(&quot;Data.PropertyType&quot;).ToString();
            string purposeName = Report.GetColumnValue(&quot;Data.Purpose&quot;).ToString();
            bool hasPurpose = (bool)Report.GetColumnValue(&quot;Data.HasPurpose&quot;);
            if(propertyTypeName == table[i, 1].Text) {
              if(!hasPurpose){
                table[i, 1].RowSpan = 2;
                break;
              }
            }
            data.Next();
          }     
      }

      //adding report title
      TableRow newRow = new TableRow();
      table.Rows.Insert(0, newRow);
      table[0, 0].ColSpan =  table.ColumnCount;
      Font font = new Font(&quot;Times New Roman&quot;, 12.0f, FontStyle.Bold);
      table[0, 0].Font = font;
      table[0, 0].HorzAlign = HorzAlign.Center;
      table[0, 0].VertAlign = VertAlign.Center;
      table[0, 0].Text = Report.GetColumnValue(&quot;Common.Title&quot;).ToString();
      table[0, 0].Padding = new System.Windows.Forms.Padding(2, 10, 2, 10);   
      table.Rows[0].AutoSize = true;
    }
    
  }

}
  </ScriptText>
  <Dictionary>
    <BusinessObjectDataSource Name="Common" ReferenceName="Common" DataType="null" Enabled="true">
      <Column Name="Title" DataType="System.String"/>
      <Column Name="DataNameColumnText" DataType="System.String"/>
    </BusinessObjectDataSource>
    <BusinessObjectDataSource Name="Data" ReferenceName="Data" DataType="null" Enabled="true">
      <Column Name="GroupName" DataType="System.String"/>
      <Column Name="PropertyType" DataType="System.String"/>
      <Column Name="Purpose" DataType="System.String"/>
      <Column Name="HasPurpose" DataType="System.Boolean"/>
      <Column Name="ObjectsCount" DataType="System.Decimal"/>
      <Column Name="CalcType" DataType="System.String"/>
      <Column Name="CalcValue" DataType="System.Decimal"/>
    </BusinessObjectDataSource>
  </Dictionary>
  <ReportPage Name="Page1" Landscape="true" PaperWidth="297" PaperHeight="210" RawPaperSize="9" Guides="9.45,670.95,207.9,500.85,302.4" UnlimitedWidth="true">
    <DataBand Name="BandData1" Width="1047.06" Height="212.41" Guides="0,88.87,32.17,69.97,51.07,18.9" DataSource="Data">
      <MatrixObject Name="MatrixData" Left="9.45" Width="661.5" Height="88.87" AfterDataEvent="MatrixData_AfterData" FixedRows="3" FixedColumns="2" RepeatHeaders="false" AutoSize="false" DataSource="Data" ShowTitle="true">
        <MatrixColumns>
          <Header Expression="[Data.PropertyType]" Sort="None" Totals="false"/>
          <Header Expression="[Data.Purpose]" Sort="None" Totals="false"/>
        </MatrixColumns>
        <MatrixRows>
          <Header Expression="[Data.GroupName]" Sort="None" Totals="false"/>
          <Header Expression="[Data.CalcType]" Sort="None" Totals="false"/>
        </MatrixRows>
        <MatrixCells>
          <Cell Expression="[Data.CalcValue]"/>
        </MatrixCells>
        <TableColumn Name="Column1" Width="198.45"/>
        <TableColumn Name="Column3" Width="292.95"/>
        <TableColumn Name="Column4" Width="170.1"/>
        <TableRow Name="Row1" Height="32.17" AutoSize="true">
          <TableCell Name="Cell1" Border.Lines="All" Text="Наименование оценочной группы" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell11" Border.Lines="All" Text="Значение" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell19" Border.Lines="All" Text="[Common.DataNameColumnText], руб./кв.м" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
        <TableRow Name="Row2" AutoSize="true">
          <TableCell Name="Cell3" Border.Lines="All" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt" RowSpan="2"/>
          <TableCell Name="Cell12" Border.Lines="All" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt" RowSpan="2"/>
          <TableCell Name="Cell20" Border.Lines="All" Text="[PropertyType]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
        <TableRow Name="Row3" AutoSize="true">
          <TableCell Name="Cell5"/>
          <TableCell Name="Cell13"/>
          <TableCell Name="Cell21" Border.Lines="All" Text="[Purpose]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
        <TableRow Name="Row4" AutoSize="true">
          <TableCell Name="Cell17" Border.Lines="All" Text="[GroupName]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell18" Border.Lines="All" Text="[CalcType]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
          <TableCell Name="Cell22" Border.Lines="All" Text="[CalcValue]" HorzAlign="Center" VertAlign="Center" Font="Times New Roman, 12pt"/>
        </TableRow>
      </MatrixObject>
    </DataBand>
    <ReportSummaryBand Name="ReportSummary1" Top="216.41" Width="1047.06" Height="47.25"/>
  </ReportPage>
</Report>
