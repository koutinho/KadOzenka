/*
 * CadAppraisalDataApi
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using System.Text;
using CadAppraisalDataApi.Models;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RosreestrDataApiController : ControllerBase
    {
        /// <summary>
        /// Возвращает документ из папки для загрузок кадастровой оценки
        /// </summary>
        /// <param name="load_id">Идентификатор загрузки</param>
        /// <param name="fname">Название файла</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/CadAppraisal/CadAppraisalDataApi/RosreestrData/file_ca_by_id/{load_id}/{fname}")]
        [ValidateModelState]
        [SwaggerOperation("RosreestrDataGetFileByIdCA")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK")]
        public virtual IActionResult RosreestrDataGetFileByIdCA([FromRoute][Required]long? load_id, [FromRoute][Required]string fname)
        {
            var xml = System.IO.File.ReadAllText(".\\TestResponces\\File_Ca_By_Id.xml");

            return File(Encoding.UTF8.GetBytes(xml), "application/xml", "File_Ca_By_Id.xml");
        }

        /// <summary>
        /// Возвращает документ из файлового хранилища по id
        /// </summary>
        /// <param name="id"></param>
        /// <param name="fname"></param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/CadAppraisal/CadAppraisalDataApi/RosreestrData/file_zd_by_id/{id}/{fname}")]
        [ValidateModelState]
        [SwaggerOperation("RosreestrDataGetFileByIdZD")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK")]
        public virtual IActionResult RosreestrDataGetFileByIdZD([FromRoute][Required]long? id, [FromRoute][Required]string fname)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));

            string exampleJson = null;
            exampleJson = "\"{}\"";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default(Object);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Возвращает графические факторы по кадастровому номеру
        /// </summary>
        /// <param name="cad_Num">Кадастровый номер</param>
        /// <param name="date_Appraisal">Дата оценки</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/CadAppraisal/CadAppraisalDataApi/RosreestrData/graph_factors_by_cad_num")]
        [ValidateModelState]
        [SwaggerOperation("RosreestrDataGetGraphFactorsByCadNum")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "OK")]
        public virtual IActionResult RosreestrDataGetGraphFactorsByCadNum([FromQuery][Required()]string cad_Num, [FromQuery][Required()]DateTime? date_Appraisal)
        {
            var exampleJson = System.IO.File.ReadAllText(@".\TestResponces\GraphFactorsByCadNum.json");

            var example = exampleJson != null
                ? JsonConvert.DeserializeObject<GraphFactorsData>(exampleJson)
                : default(GraphFactorsData);

            return new JsonResult(example);
        }

        /// <summary>
        /// Возвращает данные Росреестра по диапазону дат включительно
        /// </summary>
        /// <param name="dateFrom">Дата с</param>
        /// <param name="dateTo">Дата по</param>
        /// <response code="200">OK</response>
        [HttpGet]
        [Route("/CadAppraisal/CadAppraisalDataApi/RosreestrData/xml_by_date")]
        [ValidateModelState]
        [SwaggerOperation("RosreestrDataGetRRData")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<RRDataLoadModel>), description: "OK")]
        public virtual IActionResult RosreestrDataGetRRData([FromQuery][Required()]DateTime? dateFrom, [FromQuery][Required()]DateTime? dateTo)
        {
            var exampleJson = System.IO.File.ReadAllText(".\\TestResponces\\XmlByDateResponce.json");
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<RRDataLoadModel>>(exampleJson)
            : default(List<RRDataLoadModel>);

            return new JsonResult(example);
        }
    }
}
